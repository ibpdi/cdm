@prefix : <http://www.ibpdi.org/ontologies/DigitalTwin#> .
@prefix base: <http://www.ibpdi.org/ontologies/OntologyBase#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

: a owl:Ontology .

:AccessPanel a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "AccessPanelId" ;
            sh:path :hasAccessPanelId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Material of access panel" ;
            sh:maxCount 1 ;
            sh:maxLength 75 ;
            sh:minLength 1 ;
            sh:name "Material" ;
            sh:path :hasMaterial ;
            sh:pattern "[^<>[]{}|/°\"&=+§^~:;,$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Frame material" ;
            sh:maxCount 1 ;
            sh:maxLength 75 ;
            sh:minLength 1 ;
            sh:name "FrameMaterial" ;
            sh:path :hasFrameMaterial ;
            sh:pattern "[^<>[]{}|/°\"&=+§^~:;,$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Width" ;
            sh:maxCount 1 ;
            sh:name "Width" ;
            sh:path :hasWidth ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fire rating" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FireRating" ;
            sh:path :hasFireRating ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Thickness" ;
            sh:maxCount 1 ;
            sh:name "Thickness" ;
            sh:path :hasThickness ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Access panel type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "AccessPanelType" ;
            sh:path :hasAccessPanelType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Height" ;
            sh:maxCount 1 ;
            sh:name "Height" ;
            sh:path :hasHeight ] .

:AirCompressor a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Free air delivery" ;
            sh:maxCount 1 ;
            sh:name "FreeAirDelivery" ;
            sh:path :hasFreeAirDelivery ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Motor power" ;
            sh:maxCount 1 ;
            sh:name "MotorPower" ;
            sh:path :hasMotorPower ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "AirCompressorId" ;
            sh:path :hasAirCompressorId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "WorkingPressure" ;
            sh:maxCount 1 ;
            sh:name "WorkingPressure" ;
            sh:path :hasWorkingPressure ] .

:AirFilter a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan motor power" ;
            sh:maxCount 1 ;
            sh:name "FanMotorPower" ;
            sh:path :hasFanMotorPower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan initial cost" ;
            sh:maxCount 1 ;
            sh:name "FanInitialCost" ;
            sh:path :hasFanInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "FanName" ;
            sh:path :hasFanName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanModelNumber" ;
            sh:path :hasFanModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanSerialNumber" ;
            sh:path :hasFanSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "AirFilterId" ;
            sh:path :hasAirFilterId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanTagNumber" ;
            sh:path :hasFanTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan min flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FanMinAirflowRating" ;
            sh:path :hasFanMinAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan nominal airflow" ;
            sh:maxCount 1 ;
            sh:name "FanNominalAirflow" ;
            sh:path :hasFanNominalAirflow ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "FanExpectedReplacementCost" ;
            sh:path :hasFanExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Currency " ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Currency" ;
            sh:path :hasCurrency ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanCommissionDate" ;
            sh:path :hasFanCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanTurnoverDate" ;
            sh:path :hasFanTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan fan drive type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanDriveType" ;
            sh:path :hasFanDriveType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Fan life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "FanDurationLifeYear" ;
            sh:path :hasFanDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanInstallationDate" ;
            sh:path :hasFanInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan max flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FanMaxAirflowRating" ;
            sh:path :hasFanMaxAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanMaintenanceInterval" ;
            sh:path :hasFanMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanExpectedEndOfLife" ;
            sh:path :hasFanExpectedEndOfLife ] .

:AirHandlingUnit a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingInstallationDate" ;
            sh:path :hasSecondaryCoolingInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Primary cooling expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingExpectedReplacementCost" ;
            sh:path :hasPrimaryCoolingExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Supply fan commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "SupplyFanCommissionDate" ;
            sh:path :hasSupplyFanCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Secondary cooling initial cost" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingInitialCost" ;
            sh:path :hasSecondaryCoolingInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of exhaust fan" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "ExhaustFanName" ;
            sh:path :hasExhaustFanName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of primary cooling" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingSerialNumber" ;
            sh:path :hasPrimaryCoolingSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Return fan maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ReturnFanMaintenanceInterval" ;
            sh:path :hasReturnFanMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Pre heating turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "PreHeatingTurnoverDate" ;
            sh:path :hasPreHeatingTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of pre heating" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PreHeatingModelNumber" ;
            sh:path :hasPreHeatingModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Return fan initial cost" ;
            sh:maxCount 1 ;
            sh:name "ReturnFanInitialCost" ;
            sh:path :hasReturnFanInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of supply fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SupplyFanModelNumber" ;
            sh:path :hasSupplyFanModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Pre heating type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PreHeatingType" ;
            sh:path :hasPreHeatingType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of supply fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SupplyFanSerialNumber" ;
            sh:path :hasSupplyFanSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Exhaust fan life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "ExhaustFanDurationLifeYear" ;
            sh:path :hasExhaustFanDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of primary cooling" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingModelNumber" ;
            sh:path :hasPrimaryCoolingModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of exhaust fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ExhaustFanModelNumber" ;
            sh:path :hasExhaustFanModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of secondary cooling" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingModelNumber" ;
            sh:path :hasSecondaryCoolingModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Supply fan fan drive type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SupplyFanDriveType" ;
            sh:path :hasSupplyFanDriveType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Pre heating expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "PreHeatingExpectedEndOfLife" ;
            sh:path :hasPreHeatingExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling refrigerant type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingMethodefrigerantType" ;
            sh:path :hasPrimaryCoolingMethodefrigerantType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Re heating expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingExpectedReplacementCost" ;
            sh:path :hasReHeatingExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "AirHandlingUnitId" ;
            sh:path :hasAirHandlingUnitId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Filter type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FilterType" ;
            sh:path :hasFilterType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Return fan commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ReturnFanCommissionDate" ;
            sh:path :hasReturnFanCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of mixing box" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MixingBoxModelNumber" ;
            sh:path :hasMixingBoxModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingExpectedEndOfLife" ;
            sh:path :hasPrimaryCoolingExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of pre heating" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PreHeatingSerialNumber" ;
            sh:path :hasPreHeatingSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Pre heating life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "PreHeatingDurationLifeYear" ;
            sh:path :hasPreHeatingDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of re heating" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MixingBoxSerialNumber" ;
            sh:path :hasMixingBoxSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Return fan max flow capacity" ;
            sh:maxCount 1 ;
            sh:name "ReturnFanMaxAirflowRating" ;
            sh:path :hasReturnFanMaxAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "PreHeatingInstallationDate" ;
            sh:path :hasPreHeatingInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Humidification method" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "HumidificationMethod" ;
            sh:path :hasHumidificationMethod ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Currency " ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Currency" ;
            sh:path :hasCurrency ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Mixing box life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "MixingBoxDurationLifeYear" ;
            sh:path :hasMixingBoxDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Supply fan maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SupplyFanMaintenanceInterval" ;
            sh:path :hasSupplyFanMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ReHeatingMaintenanceInterval" ;
            sh:path :hasReHeatingMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Ventilation configuration" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "VentilationConfiguration" ;
            sh:path :hasVentilationConfiguration ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Pre heating outside diameter" ;
            sh:maxCount 1 ;
            sh:name "PreHeatingOutsideDiameter" ;
            sh:path :hasPreHeatingOutsideDiameter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Exhaust fan max flow capacity" ;
            sh:maxCount 1 ;
            sh:name "ExhaustFanMaxAirflowRating" ;
            sh:path :hasExhaustFanMaxAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingTurnoverDate" ;
            sh:path :hasPrimaryCoolingTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Mixing box expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "MixingBoxExpectedReplacementCost" ;
            sh:path :hasMixingBoxExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingMaintenanceInterval" ;
            sh:path :hasSecondaryCoolingMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Supply fan life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "SupplyFanDurationLifeYear" ;
            sh:path :hasSupplyFanDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling method type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingMethodType" ;
            sh:path :hasPrimaryCoolingMethodType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Airflow modulation" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "AirflowModulation" ;
            sh:path :hasAirflowModulation ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Return fan life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "ReturnFanDurationLifeYear" ;
            sh:path :hasReturnFanDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Supply fan expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "SupplyFanExpectedReplacementCost" ;
            sh:path :hasSupplyFanExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of return fan" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "ReturnFanName" ;
            sh:path :hasReturnFanName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ExhaustFanInstallationDate" ;
            sh:path :hasExhaustFanInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Exhaust fan fan drive type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ExhaustFanDriveType" ;
            sh:path :hasExhaustFanDriveType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingTagNumber" ;
            sh:path :hasSecondaryCoolingTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Mixing box tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MixingBoxTagNumber" ;
            sh:path :hasMixingBoxTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling refrigerant type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingMethodRefrigerantType" ;
            sh:path :hasSecondaryCoolingMethodRefrigerantType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingCommissionDate" ;
            sh:path :hasPrimaryCoolingCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling name of product" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingName" ;
            sh:path :hasSecondaryCoolingName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Dehumidification method" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DehumidificationMethod" ;
            sh:path :hasDehumidificationMethod ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Exhaust fan expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ExhaustFanExpectedEndOfLife" ;
            sh:path :hasExhaustFanExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Supply fan min flow capacity" ;
            sh:maxCount 1 ;
            sh:name "SupplyFanMinAirflowRating" ;
            sh:path :hasSupplyFanMinAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Mixing box maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MixingBoxMaintenanceInterval" ;
            sh:path :hasMixingBoxMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Mixing box expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "MixingBoxExpectedEndOfLife" ;
            sh:path :hasMixingBoxExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Primary cooling initial cost" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingInitialCost" ;
            sh:path :hasPrimaryCoolingInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of re heating" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ReHeatingSerialNumber" ;
            sh:path :hasReHeatingSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Return fan nominal airflow" ;
            sh:maxCount 1 ;
            sh:name "ReturnFanNominalAirflow" ;
            sh:path :hasReturnFanNominalAirflow ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of exhaust fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ExhaustFanSerialNumber" ;
            sh:path :hasExhaustFanSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Return fan fan drive type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ReturnFanDriveType" ;
            sh:path :hasReturnFanDriveType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingInstallationDate" ;
            sh:path :hasReHeatingInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of supply fan" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "SupplyFanName" ;
            sh:path :hasSupplyFanName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Return fan expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "ReturnFanExpectedReplacementCost" ;
            sh:path :hasReturnFanExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Re heating outside diameter" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingOutsideDiameter" ;
            sh:path :hasReHeatingOutsideDiameter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Mixing box turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "MixingBoxTurnoverDate" ;
            sh:path :hasMixingBoxTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Exhaust fan nominal airflow" ;
            sh:maxCount 1 ;
            sh:name "ExhaustFanNominalAirflow" ;
            sh:path :hasExhaustFanNominalAirflow ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating name of product" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "ReHeatingName" ;
            sh:path :hasReHeatingName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingTagNumber" ;
            sh:path :hasPrimaryCoolingTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Exhaust fan initial cost" ;
            sh:maxCount 1 ;
            sh:name "ExhaustFanInitialCost" ;
            sh:path :hasExhaustFanInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Return fan min flow capacity" ;
            sh:maxCount 1 ;
            sh:name "ReturnFanMinAirflowRating" ;
            sh:path :hasReturnFanMinAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Pre heating maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PreHeatingMaintenanceInterval" ;
            sh:path :hasPreHeatingMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Pre heating initial cost" ;
            sh:maxCount 1 ;
            sh:name "PreHeatingInitialCost" ;
            sh:path :hasPreHeatingInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Return fan tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ReturnFanTagNumber" ;
            sh:path :hasReturnFanTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Return fan turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ReturnFanTurnoverDate" ;
            sh:path :hasReturnFanTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Supply fan motor power" ;
            sh:maxCount 1 ;
            sh:name "SupplyFanMotorPower" ;
            sh:path :hasSupplyFanMotorPower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling method type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingMethodType" ;
            sh:path :hasSecondaryCoolingMethodType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Nominal heating capacity" ;
            sh:maxCount 1 ;
            sh:name "NominalHeatingCapacity" ;
            sh:path :hasNominalHeatingCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingCommissionDate" ;
            sh:path :hasSecondaryCoolingCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of secondary cooling" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingSerialNumber" ;
            sh:path :hasSecondaryCoolingSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Exhaust fan tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ExhaustFanTagNumber" ;
            sh:path :hasExhaustFanTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Pre heating expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "PreHeatingExpectedReplacementCost" ;
            sh:path :hasPreHeatingExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Mixing box initial cost" ;
            sh:maxCount 1 ;
            sh:name "MixingBoxInitialCost" ;
            sh:path :hasMixingBoxInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of return fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ReturnFanModelNumber" ;
            sh:path :hasReturnFanModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Primary cooling life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingDurationLifeYear" ;
            sh:path :hasPrimaryCoolingDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Re heating life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingDurationLifeYear" ;
            sh:path :hasReHeatingDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Re heating initial cost" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingInitialCost" ;
            sh:path :hasReHeatingInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Secondary cooling expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingExpectedReplacementCost" ;
            sh:path :hasSecondaryCoolingExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "MixingBoxInstallationDate" ;
            sh:path :hasMixingBoxInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Return fan motor power" ;
            sh:maxCount 1 ;
            sh:name "ReturnFanMotorPower" ;
            sh:path :hasReturnFanMotorPower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingExpectedEndOfLife" ;
            sh:path :hasSecondaryCoolingExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Net sensible cooling capacity" ;
            sh:maxCount 1 ;
            sh:name "NetSensibleCoolingCapacity" ;
            sh:path :hasNetSensibleCoolingCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Supply fan expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "SupplyFanExpectedEndOfLife" ;
            sh:path :hasSupplyFanExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Exhaust fan maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ExhaustFanMaintenanceInterval" ;
            sh:path :hasExhaustFanMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of re heating" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ReHeatingModelNumber" ;
            sh:path :hasReHeatingModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Pre heating commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "PreHeatingCommissionDate" ;
            sh:path :hasPreHeatingCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Return fan expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ReturnFanExpectedEndOfLife" ;
            sh:path :hasReturnFanExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Supply fan tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SupplyFanTagNumber" ;
            sh:path :hasSupplyFanTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingMaintenanceInterval" ;
            sh:path :hasPrimaryCoolingMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Exhaust fan expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "ExhaustFanExpectedReplacementCost" ;
            sh:path :hasExhaustFanExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ReHeatingType" ;
            sh:path :hasReHeatingType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Pre heating name of product" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "PreHeatingName" ;
            sh:path :hasPreHeatingName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Exhaust fan turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ExhaustFanTurnoverDate" ;
            sh:path :hasExhaustFanTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingCommissionDate" ;
            sh:path :hasReHeatingCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Exhaust fan min flow capacity" ;
            sh:maxCount 1 ;
            sh:name "ExhaustFanMinAirflowRating" ;
            sh:path :hasExhaustFanMinAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling name of product" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingName" ;
            sh:path :hasPrimaryCoolingName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Supply fan turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "SupplyFanTurnoverDate" ;
            sh:path :hasSupplyFanTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ReHeatingTagNumber" ;
            sh:path :hasReHeatingTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Nominal cooling capacity" ;
            sh:maxCount 1 ;
            sh:name "NominalCoolingCapacity" ;
            sh:path :hasNominalCoolingCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Primary cooling outside diameter" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingOutsideDiameter" ;
            sh:path :hasPrimaryCoolingOutsideDiameter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingExpectedEndOfLife" ;
            sh:path :hasReHeatingExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of return fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ReturnFanSerialNumber" ;
            sh:path :hasReturnFanSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Supply fan initial cost" ;
            sh:maxCount 1 ;
            sh:name "SupplyFanInitialCost" ;
            sh:path :hasSupplyFanInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Ventilation strategy" ;
            sh:maxCount 1 ;
            sh:maxLength 100 ;
            sh:minLength 1 ;
            sh:name "VentilationStrategy" ;
            sh:path :hasVentilationStrategy ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Discharge ductwork configuration" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DischargeDuctworkConfiguration" ;
            sh:path :hasDischargeDuctworkConfiguration ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Mixing box name of product" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "MixingBoxName" ;
            sh:path :hasMixingBoxName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Exhaust fan commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ExhaustFanCommissionDate" ;
            sh:path :hasExhaustFanCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Pre heating tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PreHeatingTagNumber" ;
            sh:path :hasPreHeatingTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Secondary cooling outside diameter" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingOutsideDiameter" ;
            sh:path :hasSecondaryCoolingOutsideDiameter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Secondary cooling life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingDurationLifeYear" ;
            sh:path :hasSecondaryCoolingDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "SupplyFanInstallationDate" ;
            sh:path :hasSupplyFanInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Mixing box commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "MixingBoxCommissionDate" ;
            sh:path :hasMixingBoxCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Refrigerant type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "RefrigerantType" ;
            sh:path :hasRefrigerantType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Mixing box economizer" ;
            sh:maxCount 1 ;
            sh:maxLength 100 ;
            sh:minLength 1 ;
            sh:name "MixingBoxEconomiser" ;
            sh:path :hasMixingBoxEconomiser ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Supply fan max flow capacity" ;
            sh:maxCount 1 ;
            sh:name "SupplyFanMaxAirflowRating" ;
            sh:path :hasSupplyFanMaxAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingTurnoverDate" ;
            sh:path :hasSecondaryCoolingTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ReturnFanInstallationDate" ;
            sh:path :hasReturnFanInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingInstallationDate" ;
            sh:path :hasPrimaryCoolingInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingTurnoverDate" ;
            sh:path :hasReHeatingTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Exhaust fan motor power" ;
            sh:maxCount 1 ;
            sh:name "ExhaustFanMotorPower" ;
            sh:path :hasExhaustFanMotorPower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Supply fan nominal airflow" ;
            sh:maxCount 1 ;
            sh:name "SupplyFanNominalAirflow" ;
            sh:path :hasSupplyFanNominalAirflow ] .

:AreaMeasurement a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Date measurement is not valid anymore /needs to be renewed  in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ValidUntil" ;
            sh:path :hasValidUntil ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Type of the standard area" ;
            sh:in ( "Gross floor area" "Construction area" "Net room area" "Circulation area" "Net usable area" "Technical area" "Living/residence area" "Office area" "Production/laboratory area" "Storage/distribution/selling area" "Education/teaching/culture area" "Healing/care area" "Other uses" "Rentable exclusion" "Rentable area" "Gross external area" "External Wall area" "Gross internal area" "A-Vertical penetrations" "B-Structural elements" "C-Technical services" "D-Hygiene areas" "E-Circulation areas" "F-Amenities" "G-Workspace" "H-Other areas" "Boundary area" "Rentable area common occupancy" "Building amenity area" "Building service area" "Floor service area" "Rentable area exclusive occupancy" "Tenant ancillary area" "Tenant area" "Major vertical penetrations" "Occupant Storage area" "Parking area" "Unenclosed Building Feature: Covered Gallery" "Vacant area" "NA" "Energy reference area" ) ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "AreaMeasurementType" ;
            sh:path :hasAreaMeasurementType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Date measurement was taken in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ValidFrom" ;
            sh:path :hasValidFrom ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Accuracy of area measurement" ;
            sh:in ( "Estimated" "Measured" "Aggregated" "Unknown" ) ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "AreaMeasurementAccuracy" ;
            sh:path :hasAreaMeasurementAccuracy ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Area measurement standard" ;
            sh:in ( "DIN 277-1" "MFG" "IPMS" "RICS" "BOMA" "NA" ) ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "Standard" ;
            sh:path :hasStandard ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unit area is measured with" ;
            sh:in ( "sqm" "sqft" ) ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "AreaMeasurementUnit" ;
            sh:path :hasAreaMeasurementUnit ;
            sh:pattern "[^<>[]|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "AreaMeasurementId" ;
            sh:node :AreaMeasurementId ;
            sh:path base:hasPrimaryKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Value of measurement" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "Value" ;
            sh:path :hasValue ] .

:AreaMeasurementBuilding a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "AreaMeasurementId" ;
            sh:node :AreaMeasurementId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "BuildingId" ;
            sh:node :BuildingId ;
            sh:path base:hasForeignKey ] .

:AreaMeasurementFloor a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "AreaMeasurementId" ;
            sh:node :AreaMeasurementId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "FloorId" ;
            sh:node :FloorId ;
            sh:path base:hasForeignKey ] .

:AreaMeasurementLand a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "AreaMeasurementId" ;
            sh:node :AreaMeasurementId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "LandId" ;
            sh:node :LandId ;
            sh:path base:hasForeignKey ] .

:AreaMeasurementRentalUnit a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "AreaMeasurementId" ;
            sh:node :AreaMeasurementId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "RentalUnitId" ;
            sh:node :RentalUnitId ;
            sh:path base:hasForeignKey ] .

:AreaMeasurementSite a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "AreaMeasurementId" ;
            sh:node :AreaMeasurementId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SiteId" ;
            sh:node :SiteId ;
            sh:path base:hasForeignKey ] .

:AreaMeasurementSpace a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "AreaMeasurementId" ;
            sh:node :AreaMeasurementId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SpaceId" ;
            sh:node :SpaceId ;
            sh:path base:hasForeignKey ] .

:AreaMeasurementUnit a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "UnitId" ;
            sh:node :UnitId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "AreaMeasurementId" ;
            sh:node :AreaMeasurementId ;
            sh:path base:hasForeignKey ] .

:AutomaticTransferSwitch a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "TransferSwitchId" ;
            sh:path :hasTransferSwitchId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Transition type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "TransitionType" ;
            sh:path :hasTransitionType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubSubComponentTypeId" ;
            sh:node :SubSubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Material" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusMaterial" ;
            sh:path :hasMainBusMaterial ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Switching Mechanism" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SwitchingMechanism" ;
            sh:path :hasSwitchingMechanism ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Poles" ;
            sh:maxCount 1 ;
            sh:name "Poles" ;
            sh:path :hasPoles ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Current rating" ;
            sh:maxCount 1 ;
            sh:name "MainBusCurrentRating" ;
            sh:path :hasMainBusCurrentRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Mains rating" ;
            sh:maxCount 1 ;
            sh:name "MainsRating" ;
            sh:path :hasMainsRating ] .

:BacNetController a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Bac net controller address" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Address" ;
            sh:path :hasAddress ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Registration id" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ConnectorId" ;
            sh:path :hasConnectorId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Registration key" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "RegistrationKey" ;
            sh:path :hasRegistrationKey ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Enabled (Y/N)" ;
            sh:maxCount 1 ;
            sh:name "Enabled" ;
            sh:path :hasEnabled ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Detected (Y/N)" ;
            sh:maxCount 1 ;
            sh:name "Detected" ;
            sh:path :hasDetected ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "BacNetControllerId" ;
            sh:path :hasBacNetControllerId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Registration id" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "RegistrationId" ;
            sh:path :hasRegistrationId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:Boiler a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Medium of boiler" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Medium" ;
            sh:path :hasMedium ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Boiler type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "BoilerType" ;
            sh:path :hasBoilerType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Tank capacity" ;
            sh:maxCount 1 ;
            sh:name "TankCapacity" ;
            sh:path :hasTankCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Recovery rate to 100 frise in l per hour" ;
            sh:maxCount 1 ;
            sh:name "Recovery100FRise" ;
            sh:path :hasRecovery100FRise ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "BoilerId" ;
            sh:path :hasBoilerId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Power input" ;
            sh:maxCount 1 ;
            sh:name "PowerInput" ;
            sh:path :hasPowerInput ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Power output" ;
            sh:maxCount 1 ;
            sh:name "PowerOutput" ;
            sh:path :hasPowerOutput ] .

:Building a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Is the building owned or leased." ;
            sh:in ( "Owner" "Tenant" ) ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "TypeOfOwnership" ;
            sh:path :hasTypeOfOwnership ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Energy Efficiency Class of Building" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "EnergyEfficiencyClass" ;
            sh:path :hasEnergyEfficiencyClass ;
            sh:pattern "[^<>[]{}|/()°\"&=§^~:;,$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Status of building" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "BuildingStatus" ;
            sh:path :hasBuildingStatus ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Type of energy used" ;
            sh:in ( "Natural Gas" "Coal" "Nuclear" "Petroleum" "Hydropower" "Wind" "Biomass" "Geothermal" "Solar" ) ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryEnergyType" ;
            sh:path :hasPrimaryEnergyType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary Type of heating" ;
            sh:in ( "District heating" "Natural gas" "Oil-based fuels" "Solar thermal" "Unspecified" "Heat pump" "Electricity (radiator)" "Biomass" "Micro combined heat and power" ) ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryHeatingType" ;
            sh:path :hasPrimaryHeatingType ;
            sh:pattern "[^<>[]{}|/°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Reference to the Site which the building belongs to" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SiteId" ;
            sh:node :SiteId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Number of electric vehicle charging stations" ;
            sh:maxCount 1 ;
            sh:name "ElectricVehicleChargingStations" ;
            sh:path :hasElectricVehicleChargingStations ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "The building is declared to be an ancient monument with national importance by the government" ;
            sh:maxCount 1 ;
            sh:name "MonumentProtection" ;
            sh:path :hasMonumentProtection ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "BuildingId" ;
            sh:node :BuildingId ;
            sh:path base:hasPrimaryKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Year of last refurbishment took place in yyyy-mm-ddThh:mm:ssZ form (conform ISO 8061). In case only year exists use yyyy-01-01 00:00:00." ;
            sh:maxCount 1 ;
            sh:name "YearOfLastRefurbishment" ;
            sh:path :hasYearOfLastRefurbishment ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary Type of heating" ;
            sh:in ( "District heating" "Natural gas" "Oil-based fuels" "Solar thermal" "Unspecified" "Heat pump" "Electricity (radiator)" ) ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SecondaryHeatingType" ;
            sh:path :hasSecondaryHeatingType ;
            sh:pattern "[^<>[]{}|/°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "The records can be used until this date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ValidUntil" ;
            sh:path :hasValidUntil ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Year of construction in yyyy-mm-ddThh:mm:ssZ form (conform ISO 8061). In case only year exists use yyyy-01-01 00:00:00." ;
            sh:maxCount 1 ;
            sh:name "ConstructionYear" ;
            sh:path :hasConstructionYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Is there multiple tenants in the building or only one" ;
            sh:in ( "Single-tenant" "Multi-tenant" ) ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "TenantStructure" ;
            sh:path :hasTenantStructure ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Second type of building use" ;
            sh:in ( "Retail" "Retail, High Street" "Retail, Retail Centers" "Retail, Shopping Center" "Retail, Strip Mall" "Retail, Lifestyle Center" "Retail, Warehouse" "Retail, Restaurants/Bars" "Retail, Other" "Office" "Office, Corporate" "Office, Low-Rise Office" "Office, Mid-Rise Office" "Office, High-Rise Office" "Office, Medical Office" "Office, Business Park" "Office, Other" "Industrial" "Industrial, Distribution Warehouse" "Industrial, Industrial Park" "Industrial, Manufacturing" "Industrial, Other" "Residential" "Residential, Multi-Family" "Residential, Low-Rise Multi-Family" "Residential, Mid-Rise Multi-Family" "Residential, High-Rise Multi-Family" "Residential, Family Homes" "Residential, Student Housing" "Residential, Retirement Living" "Residential, Other" "Hotel" "Lodging, Leisure & Recreation" "Lodging, Leisure & Recreation, Indoor Arena" "Lodging, Leisure & Recreation, Fitness Center" "Lodging, Leisure & Recreation, Performing Arts" "Lodging, Leisure & Recreation, Swimming Center" "Lodging, Leisure & Recreation, Museum/Gallery" "Lodging, Leisure & Recreation, Other" "Education" "Education, School" "Education, University" "Education, Library" "Education, Other" "Technology/Science" "Technology/Science, Data Center" "Technology/Science, Laboratory/Life sciences" "Technology/Science, Other" "Health Care" "Health Care, Health Care Center" "Health Care, Senior Homes" "Health Care, Other" "Mixed Use" "Mixed Use, Office/Retail" "Mixed Use, Office/Residential" "Mixed Use, Office/Industrial" "Mixed Use, Other" "Other" "Other, Parking (Indoors)" "Other, Self-Storage" ) ;
            sh:maxCount 1 ;
            sh:maxLength 75 ;
            sh:minLength 1 ;
            sh:name "SecondaryTypeOfBuilding" ;
            sh:path :hasSecondaryTypeOfBuilding ;
            sh:pattern "[^<>[]{}|°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Does the building have air conditioning (Y/N) (Needed for precise  future emissions projection of building)" ;
            sh:maxCount 1 ;
            sh:name "AirConditioning" ;
            sh:path :hasAirConditioning ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Type of water used" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryWaterType" ;
            sh:path :hasPrimaryWaterType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "User specific building name e.g: EMEA Headquarter, Office Berlin" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "Name" ;
            sh:path :hasName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "User specific Building Code" ;
            sh:maxCount 1 ;
            sh:maxLength 70 ;
            sh:minLength 1 ;
            sh:name "BuildingCode" ;
            sh:path :hasBuildingCode ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Number of parking spaces" ;
            sh:maxCount 1 ;
            sh:name "ParkingSpaces" ;
            sh:path :hasParkingSpaces ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Type of building use" ;
            sh:in ( "Retail" "Retail, High Street" "Retail, Retail Centers" "Retail, Shopping Center" "Retail, Strip Mall" "Retail, Lifestyle Center" "Retail, Warehouse" "Retail, Restaurants/Bars" "Retail, Other" "Office" "Office, Corporate" "Office, Low-Rise Office" "Office, Mid-Rise Office" "Office, High-Rise Office" "Office, Medical Office" "Office, Business Park" "Office, Other" "Industrial" "Industrial, Distribution Warehouse" "Industrial, Industrial Park" "Industrial, Manufacturing" "Industrial, Other" "Residential" "Residential, Multi-Family" "Residential, Low-Rise Multi-Family" "Residential, Mid-Rise Multi-Family" "Residential, High-Rise Multi-Family" "Residential, Family Homes" "Residential, Student Housing" "Residential, Retirement Living" "Residential, Other" "Hotel" "Lodging, Leisure & Recreation" "Lodging, Leisure & Recreation, Indoor Arena" "Lodging, Leisure & Recreation, Fitness Center" "Lodging, Leisure & Recreation, Performing Arts" "Lodging, Leisure & Recreation, Swimming Center" "Lodging, Leisure & Recreation, Museum/Gallery" "Lodging, Leisure & Recreation, Other" "Education" "Education, School" "Education, University" "Education, Library" "Education, Other" "Technology/Science" "Technology/Science, Data Center" "Technology/Science, Laboratory/Life sciences" "Technology/Science, Other" "Health Care" "Health Care, Health Care Center" "Health Care, Senior Homes" "Health Care, Other" "Mixed Use" "Mixed Use, Office/Retail" "Mixed Use, Office/Residential" "Mixed Use, Office/Industrial" "Mixed Use, Other" "Other" "Other, Parking (Indoors)" "Other, Self-Storage" ) ;
            sh:maxCount 1 ;
            sh:maxLength 75 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "PrimaryTypeOfBuilding" ;
            sh:path :hasPrimaryTypeOfBuilding ;
            sh:pattern "[^<>[]{}|°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "The records can be used from this date onwards in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ValidFrom" ;
            sh:path :hasValidFrom ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Is building self used or not (Y/N)" ;
            sh:maxCount 1 ;
            sh:name "SelfUse" ;
            sh:path :hasSelfUse ] .

:CeilingFan a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletInstallationDate" ;
            sh:path :hasDuctInletInstallationDate ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletTurnoverDate" ;
            sh:path :hasDuctInletTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Ceiling fan drive type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DriveType" ;
            sh:path :hasDriveType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletSerialNumber" ;
            sh:path :hasDuctInletSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Commission date if duct inlet in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletCommissionDate" ;
            sh:path :hasDuctInletCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Min flow capacity" ;
            sh:maxCount 1 ;
            sh:name "MinAirflowRating" ;
            sh:path :hasMinAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanInstallationDate" ;
            sh:path :hasFanInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "FanExpectedReplacementCost" ;
            sh:path :hasFanExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Motor power" ;
            sh:maxCount 1 ;
            sh:name "MotorPower" ;
            sh:path :hasMotorPower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanCommissionDate" ;
            sh:path :hasFanCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanTurnoverDate" ;
            sh:path :hasFanTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Fan life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "FanDurationLifeYear" ;
            sh:path :hasFanDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet model number" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletModel" ;
            sh:path :hasDuctInletModel ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanSerialNumber" ;
            sh:path :hasFanSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletExpectedEndOfLife" ;
            sh:path :hasDuctInletExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanMaintenanceInterval" ;
            sh:path :hasFanMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "CeilingFanId" ;
            sh:path :hasCeilingFanId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet configuration" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletConfiguration" ;
            sh:path :hasDuctInletConfiguration ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Currency " ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Currency" ;
            sh:path :hasCurrency ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of Duct inlet" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletName" ;
            sh:path :hasDuctInletName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletMaintenanceInterval" ;
            sh:path :hasDuctInletMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanTagNumber" ;
            sh:path :hasFanTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan max flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FanMaxAirflowRating" ;
            sh:path :hasFanMaxAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Max flow capacity" ;
            sh:maxCount 1 ;
            sh:name "MaxAirflowRating" ;
            sh:path :hasMaxAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "DuctInletExpectedReplacementCost" ;
            sh:path :hasDuctInletExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Ceiling fan type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "CeilingFanType" ;
            sh:path :hasCeilingFanType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan motor power" ;
            sh:maxCount 1 ;
            sh:name "FanMotorPower" ;
            sh:path :hasFanMotorPower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet shape" ;
            sh:maxCount 1 ;
            sh:name "DuctInletShape" ;
            sh:path :hasDuctInletShape ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletTagNumber" ;
            sh:path :hasDuctInletTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet size" ;
            sh:maxCount 1 ;
            sh:name "DuctInletSize" ;
            sh:path :hasDuctInletSize ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "FanName" ;
            sh:path :hasFanName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Nominal airflow" ;
            sh:maxCount 1 ;
            sh:name "NominalAirflow" ;
            sh:path :hasNominalAirflow ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet initial cost" ;
            sh:maxCount 1 ;
            sh:name "DuctInletInitialCost" ;
            sh:path :hasDuctInletInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Currency " ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletCurrency" ;
            sh:path :hasDuctInletCurrency ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan initial cost" ;
            sh:maxCount 1 ;
            sh:name "FanInitialCost" ;
            sh:path :hasFanInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan min flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FanMinAirflowRating" ;
            sh:path :hasFanMinAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanModelNumber" ;
            sh:path :hasFanModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanExpectedEndOfLife" ;
            sh:path :hasFanExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan fan drive type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanDriveType" ;
            sh:path :hasFanDriveType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan nominal airflow" ;
            sh:maxCount 1 ;
            sh:name "FanNominalAirflow" ;
            sh:path :hasFanNominalAirflow ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Blade diameter of ceiling fan" ;
            sh:maxCount 1 ;
            sh:name "BladeDiameter" ;
            sh:path :hasBladeDiameter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Max rotation speed in rotations per minute" ;
            sh:maxCount 1 ;
            sh:name "MaxRotationSpeed" ;
            sh:path :hasMaxRotationSpeed ] .

:Certificate a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of Certificate" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "Name" ;
            sh:path :hasName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Certificate Url" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "CertificateUrl" ;
            sh:path :hasCertificateUrl ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "CertificateId" ;
            sh:node :CertificateId ;
            sh:path base:hasPrimaryKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Type of Certificate e.g: LEED, BREEAM, DGNB" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "CertificateType" ;
            sh:path :hasCertificateType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Date certificate is valid from in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ValidFrom" ;
            sh:path :hasValidFrom ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Score, grade if applicable for the certificate" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "Value" ;
            sh:path :hasValue ;
            sh:pattern "[^<>[]{}|/()°\"&=§^~:;,$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Date certificate was issued in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "IssuingDate" ;
            sh:path :hasIssuingDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Link to document" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DocumentId" ;
            sh:path :hasDocumentId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Date certificate expires in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ValidUntil" ;
            sh:path :hasValidUntil ] .

:CertificateBuilding a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "CertificateId" ;
            sh:node :CertificateId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "BuildingId" ;
            sh:node :BuildingId ;
            sh:path base:hasForeignKey ] .

:CertificateComponent a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentId" ;
            sh:node :ComponentId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "CertificateId" ;
            sh:node :CertificateId ;
            sh:path base:hasForeignKey ] .

:CertificateSystem a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "CertificateId" ;
            sh:node :CertificateId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SystemId" ;
            sh:node :SystemId ;
            sh:path base:hasForeignKey ] .

:CertificateValuation a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ValuationId" ;
            sh:node :ValuationId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "CertificateId" ;
            sh:node :CertificateId ;
            sh:path base:hasForeignKey ] .

:Chiller a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Compressor type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "CompressorType" ;
            sh:path :hasCompressorType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ChillerId" ;
            sh:path :hasChillerId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Chiller type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ChillerType" ;
            sh:path :hasChillerType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Refrigerant type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "RefrigerantType" ;
            sh:path :hasRefrigerantType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Nominal cooling capacity" ;
            sh:maxCount 1 ;
            sh:name "NominalCoolingCapacity" ;
            sh:path :hasNominalCoolingCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Net sensible cooling capacity" ;
            sh:maxCount 1 ;
            sh:name "NetSensibleCoolingCapacity" ;
            sh:path :hasNetSensibleCoolingCapacity ] .

:CoGenerator a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Standby power kva" ;
            sh:maxCount 1 ;
            sh:name "StandbyPowerKva" ;
            sh:path :hasStandbyPowerKva ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubSubComponentTypeId" ;
            sh:node :SubSubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Prime power kva" ;
            sh:maxCount 1 ;
            sh:name "PrimePowerKva" ;
            sh:path :hasPrimePowerKva ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fuel type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FuelType" ;
            sh:path :hasFuelType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Mode of operation" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ModeOfOperation" ;
            sh:path :hasModeOfOperation ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Frequency" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Frequency" ;
            sh:path :hasFrequency ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "CoGeneratorId" ;
            sh:path :hasCoGeneratorId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Output phases" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "OutputPhases" ;
            sh:path :hasOutputPhases ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Bulk storage capacity" ;
            sh:maxCount 1 ;
            sh:name "BulkStorageCapacity" ;
            sh:path :hasBulkStorageCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Standby power" ;
            sh:maxCount 1 ;
            sh:name "StandbyPower" ;
            sh:path :hasStandbyPower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Output voltage" ;
            sh:maxCount 1 ;
            sh:name "OutputVoltage" ;
            sh:path :hasOutputVoltage ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Standby power" ;
            sh:maxCount 1 ;
            sh:name "PrimePower" ;
            sh:path :hasPrimePower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Day tank capacity" ;
            sh:maxCount 1 ;
            sh:name "DayTankCapacity" ;
            sh:path :hasDayTankCapacity ] .

:Component a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Life span of component in years" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "DurationLifeYear" ;
            sh:path :hasDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Condition of component" ;
            sh:in ( "Defect" "Good" "Not Available" ) ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ConditionStatus" ;
            sh:path :hasConditionStatus ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "TurnoverDate" ;
            sh:path :hasTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ComponentId" ;
            sh:path :hasComponentId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "InstallationDate" ;
            sh:path :hasInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "ExpectedReplacementCost" ;
            sh:path :hasExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "SerialNumber" ;
            sh:path :hasSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Type of component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ComponentType" ;
            sh:path :hasComponentType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "TagNumber" ;
            sh:path :hasTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Warranty start date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "WarrantyStartDate" ;
            sh:path :hasWarrantyStartDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Currency " ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "Currency" ;
            sh:path :hasCurrency ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of component" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "Name" ;
            sh:path :hasName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Initial cost" ;
            sh:maxCount 1 ;
            sh:name "InitialCost" ;
            sh:path :hasInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Barcode of component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Barcode" ;
            sh:path :hasBarcode ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ExpectedEndOfLife" ;
            sh:path :hasExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Description of component" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "GeometrySpatialReference" ;
            sh:path :hasGeometrySpatialReference ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Description of component" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "Description" ;
            sh:path :hasDescription ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "CommissionDate" ;
            sh:path :hasCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Counter of component" ;
            sh:maxCount 1 ;
            sh:name "Counter" ;
            sh:path :hasCounter ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ] .

:ComponentBuilding a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "BuildingId" ;
            sh:node :BuildingId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentId" ;
            sh:node :ComponentId ;
            sh:path base:hasForeignKey ] .

:ComponentFloor a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentId" ;
            sh:node :ComponentId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "FloorId" ;
            sh:node :FloorId ;
            sh:path base:hasForeignKey ] .

:ComponentRentalUnit a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentId" ;
            sh:node :ComponentId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "RentalUnitId" ;
            sh:node :RentalUnitId ;
            sh:path base:hasForeignKey ] .

:ComponentSite a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentId" ;
            sh:node :ComponentId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SiteId" ;
            sh:node :SiteId ;
            sh:path base:hasForeignKey ] .

:ComponentSpace a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentId" ;
            sh:node :ComponentId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SpaceId" ;
            sh:node :SpaceId ;
            sh:path base:hasForeignKey ] .

:ComponentSystem a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SystemId" ;
            sh:node :SystemId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentId" ;
            sh:node :ComponentId ;
            sh:path base:hasForeignKey ] .

:ComponentType a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of product" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "Name" ;
            sh:path :hasName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Link to document" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DocumentId" ;
            sh:path :hasDocumentId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Class component belongs to" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "Class" ;
            sh:path :hasClass ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Maintenance group" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MaintenanceGroup" ;
            sh:path :hasMaintenanceGroup ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "European identification number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "CeIdentification" ;
            sh:path :hasCeIdentification ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of component type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ModelNumber" ;
            sh:path :hasModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Product website" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "UrlLibrary" ;
            sh:path :hasUrlLibrary ;
            sh:pattern "[^<>[]{}|()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Relevance of maintenance" ;
            sh:in ( "High" "Medium" "Low" ) ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MaintenanceRelevance" ;
            sh:path :hasMaintenanceRelevance ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Description of component type" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "Description" ;
            sh:path :hasDescription ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Life span of product in years" ;
            sh:maxCount 1 ;
            sh:name "ExpectedLifeYear" ;
            sh:path :hasExpectedLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Type of component type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ComponentTypeType" ;
            sh:path :hasComponentTypeType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Component type name and/or number" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "Model" ;
            sh:path :hasModel ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Warranty duration in months" ;
            sh:maxCount 1 ;
            sh:name "WarrantyDuration" ;
            sh:path :hasWarrantyDuration ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MaintenanceInterval" ;
            sh:path :hasMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ComponentTypeId" ;
            sh:path :hasComponentTypeId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:ComponentUnit a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentId" ;
            sh:node :ComponentId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "UnitId" ;
            sh:node :UnitId ;
            sh:path base:hasForeignKey ] .

:CondensingUnit a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "CondensingUnitId" ;
            sh:path :hasCondensingUnitId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Net sensible cooling capacity" ;
            sh:maxCount 1 ;
            sh:name "NetSensibleCoolingCapacity" ;
            sh:path :hasNetSensibleCoolingCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Nominal cooling capacity" ;
            sh:maxCount 1 ;
            sh:name "NominalCoolingCapacity" ;
            sh:path :hasNominalCoolingCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Nominal heating capacity" ;
            sh:maxCount 1 ;
            sh:name "NominalHeatingCapacity" ;
            sh:path :hasNominalHeatingCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Condensing unit type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "CondensingUnitType" ;
            sh:path :hasCondensingUnitType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Energy efficiency rating" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "EnergyEfficiencyRating" ;
            sh:path :hasEnergyEfficiencyRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Net sensible heating capacity" ;
            sh:maxCount 1 ;
            sh:name "NetSensibleHeatingCapacity" ;
            sh:path :hasNetSensibleHeatingCapacity ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Refrigerant type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "RefrigerantType" ;
            sh:path :hasRefrigerantType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:Controller a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Detected (Y/N)" ;
            sh:maxCount 1 ;
            sh:name "Detected" ;
            sh:path :hasDetected ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Registration key" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "RegistrationKey" ;
            sh:path :hasRegistrationKey ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Registration id" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ConnectorId" ;
            sh:path :hasConnectorId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ControllerId" ;
            sh:path :hasControllerId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Enabled (Y/N)" ;
            sh:maxCount 1 ;
            sh:name "Enabled" ;
            sh:path :hasEnabled ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Registration id" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "RegistrationId" ;
            sh:path :hasRegistrationId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:CoolingTower a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanTurnoverDate" ;
            sh:path :hasFanTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanExpectedEndOfLife" ;
            sh:path :hasFanExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Fan life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "FanDurationLifeYear" ;
            sh:path :hasFanDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanCommissionDate" ;
            sh:path :hasFanCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Nominal cooling capacity" ;
            sh:maxCount 1 ;
            sh:name "NominalCoolingCapacity" ;
            sh:path :hasNominalCoolingCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan max flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FanMaxAirflowRating" ;
            sh:path :hasFanMaxAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "FanName" ;
            sh:path :hasFanName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanInstallationDate" ;
            sh:path :hasFanInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan initial cost" ;
            sh:maxCount 1 ;
            sh:name "FanInitialCost" ;
            sh:path :hasFanInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan fan drive type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanDriveType" ;
            sh:path :hasFanDriveType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan min flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FanMinAirflowRating" ;
            sh:path :hasFanMinAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanTagNumber" ;
            sh:path :hasFanTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "FanExpectedReplacementCost" ;
            sh:path :hasFanExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan nominal airflow" ;
            sh:maxCount 1 ;
            sh:name "FanNominalAirflow" ;
            sh:path :hasFanNominalAirflow ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FlowCapacity" ;
            sh:path :hasFlowCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanMaintenanceInterval" ;
            sh:path :hasFanMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "CoolingTowerId" ;
            sh:path :hasCoolingTowerId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanModelNumber" ;
            sh:path :hasFanModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Currency " ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Currency" ;
            sh:path :hasCurrency ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanSerialNumber" ;
            sh:path :hasFanSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan motor power" ;
            sh:maxCount 1 ;
            sh:name "FanMotorPower" ;
            sh:path :hasFanMotorPower ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ] .

:Damper a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletInstallationDate" ;
            sh:path :hasDuctInletInstallationDate ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletTurnoverDate" ;
            sh:path :hasDuctInletTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Commission date if duct inlet in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletCommissionDate" ;
            sh:path :hasDuctInletCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "DuctInletExpectedReplacementCost" ;
            sh:path :hasDuctInletExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Currency " ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletCurrency" ;
            sh:path :hasDuctInletCurrency ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletExpectedEndOfLife" ;
            sh:path :hasDuctInletExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletTagNumber" ;
            sh:path :hasDuctInletTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet shape" ;
            sh:maxCount 1 ;
            sh:name "DuctInletShape" ;
            sh:path :hasDuctInletShape ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet initial cost" ;
            sh:maxCount 1 ;
            sh:name "DuctInletInitialCost" ;
            sh:path :hasDuctInletInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet model number" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletModel" ;
            sh:path :hasDuctInletModel ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Class component belongs to" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "LeakageClass" ;
            sh:path :hasLeakageClass ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletMaintenanceInterval" ;
            sh:path :hasDuctInletMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet configuration" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletConfiguration" ;
            sh:path :hasDuctInletConfiguration ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet size" ;
            sh:maxCount 1 ;
            sh:name "DuctInletSize" ;
            sh:path :hasDuctInletSize ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Blade type of damper (usually two different types of blade dampers used to modulate air flow: parallel and opposed blade dampers)" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "BladeType" ;
            sh:path :hasBladeType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "DamperId" ;
            sh:path :hasDamperId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletSerialNumber" ;
            sh:path :hasDuctInletSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of Duct inlet" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletName" ;
            sh:path :hasDuctInletName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:DataNetworkEquipment a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "DataNetworkEquipmentId" ;
            sh:path :hasDataNetworkEquipmentId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Mounted in it rack" ;
            sh:maxCount 1 ;
            sh:name "MountedInRack" ;
            sh:path :hasMountedInRack ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "It rack position" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "RackPosition" ;
            sh:path :hasRackPosition ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ] .

:DataNetworkSubComponent a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Height of RUs (rack units)" ;
            sh:maxCount 1 ;
            sh:name "HeightRUs" ;
            sh:path :hasHeightRUs ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Number of ports" ;
            sh:maxCount 1 ;
            sh:name "NumberOfPorts" ;
            sh:path :hasNumberOfPorts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "DataNetworkSubComponentId" ;
            sh:path :hasDataNetworkSubComponentId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Data network sub component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SubComponent" ;
            sh:path :hasSubComponent ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "It rack position" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "RackPosition" ;
            sh:path :hasRackPosition ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:ElectricalDistributionEquipmentSubComponent a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical distribution equipment sub component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SubComponent" ;
            sh:path :hasSubComponent ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Electrical distribution equipment sub component initial cost" ;
            sh:maxCount 1 ;
            sh:name "MainBusInitialCost" ;
            sh:path :hasMainBusInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Current rating" ;
            sh:maxCount 1 ;
            sh:name "MainBusCurrentRating" ;
            sh:path :hasMainBusCurrentRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of electrical distribution equipment sub component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusModelNumber" ;
            sh:path :hasMainBusModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Short circuit rating" ;
            sh:maxCount 1 ;
            sh:name "ShortCircuitRating" ;
            sh:path :hasShortCircuitRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical distribution equipment sub component expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "MainBusExpectedEndOfLife" ;
            sh:path :hasMainBusExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical distribution equipment sub component tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusTagNumber" ;
            sh:path :hasMainBusTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Electrical distribution equipment sub component life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "MainBusDurationLifeYear" ;
            sh:path :hasMainBusDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Main bus name" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "MainBusName" ;
            sh:path :hasMainBusName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical distribution equipment sub component turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "MainBusTurnoverDate" ;
            sh:path :hasMainBusTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Electrical distribution equipment sub component expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "MainBusExpectedReplacementCost" ;
            sh:path :hasMainBusExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical distribution equipment sub component maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusMaintenanceInterval" ;
            sh:path :hasMainBusMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical distribution equipment sub component commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "MainBusCommissionDate" ;
            sh:path :hasMainBusCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ElectricalDistributionEquipmentSubComponentId" ;
            sh:path :hasElectricalDistributionEquipmentSubComponentId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Input phases" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "InputPhases" ;
            sh:path :hasInputPhases ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "MainBusInstallationDate" ;
            sh:path :hasMainBusInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Material" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusMaterial" ;
            sh:path :hasMainBusMaterial ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Input voltage" ;
            sh:maxCount 1 ;
            sh:name "InputVoltage" ;
            sh:path :hasInputVoltage ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of electrical distribution equipment sub component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusSerialNumber" ;
            sh:path :hasMainBusSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:ElectricalMeter a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Net energy" ;
            sh:maxCount 1 ;
            sh:name "NetEnergy" ;
            sh:path :hasNetEnergy ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Import power" ;
            sh:maxCount 1 ;
            sh:name "ImportPower" ;
            sh:path :hasImportPower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Import energy" ;
            sh:maxCount 1 ;
            sh:name "ImportEnergy" ;
            sh:path :hasImportEnergy ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Net power" ;
            sh:maxCount 1 ;
            sh:name "NetPower" ;
            sh:path :hasNetPower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ElectricalMeterId" ;
            sh:path :hasElectricalMeterId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Export energy" ;
            sh:maxCount 1 ;
            sh:name "ExportEnergy" ;
            sh:path :hasExportEnergy ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Export power" ;
            sh:maxCount 1 ;
            sh:name "ExportPower" ;
            sh:path :hasExportPower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical meter type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ElectricalMeterType" ;
            sh:path :hasElectricalMeterType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ] .

:ElectricalPanelBoard a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of electrical panel board" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusSerialNumber" ;
            sh:path :hasMainBusSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of electrical panel board" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusModelNumber" ;
            sh:path :hasMainBusModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Max number of poles" ;
            sh:maxCount 1 ;
            sh:name "MaxNumberOfPoles" ;
            sh:path :hasMaxNumberOfPoles ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Input phases" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "InputPhases" ;
            sh:path :hasInputPhases ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical panel board number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusTagNumber" ;
            sh:path :hasMainBusTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ElectricalPanelBoardId" ;
            sh:path :hasElectricalPanelBoardId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical panel board turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "MainBusTurnoverDate" ;
            sh:path :hasMainBusTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical panel board maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusMaintenanceInterval" ;
            sh:path :hasMainBusMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical panel board expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "MainBusExpectedEndOfLife" ;
            sh:path :hasMainBusExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Electrical panel board life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "MainBusDurationLifeYear" ;
            sh:path :hasMainBusDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Material" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusMaterial" ;
            sh:path :hasMainBusMaterial ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Electrical panel board expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "MainBusExpectedReplacementCost" ;
            sh:path :hasMainBusExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Main bus name" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "MainBusName" ;
            sh:path :hasMainBusName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "MainBusInstallationDate" ;
            sh:path :hasMainBusInstallationDate ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Input voltage" ;
            sh:maxCount 1 ;
            sh:name "InputVoltage" ;
            sh:path :hasInputVoltage ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Electrical panel board initial cost" ;
            sh:maxCount 1 ;
            sh:name "MainBusInitialCost" ;
            sh:path :hasMainBusInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Current rating" ;
            sh:maxCount 1 ;
            sh:name "MainBusCurrentRating" ;
            sh:path :hasMainBusCurrentRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Short circuit rating" ;
            sh:maxCount 1 ;
            sh:name "ShortCircuitRating" ;
            sh:path :hasShortCircuitRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical panel board commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "MainBusCommissionDate" ;
            sh:path :hasMainBusCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Output phases" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "OutputPhases" ;
            sh:path :hasOutputPhases ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:ElectricalPanelBoardMcb a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Electrical panel board mcb life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "MainBusDurationLifeYear" ;
            sh:path :hasMainBusDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of electrical panel board mcb" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusSerialNumber" ;
            sh:path :hasMainBusSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "MainBusInstallationDate" ;
            sh:path :hasMainBusInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical panel board mcb expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "MainBusExpectedEndOfLife" ;
            sh:path :hasMainBusExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Main bus name" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "MainBusName" ;
            sh:path :hasMainBusName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Mcb rating" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "McbRating" ;
            sh:path :hasMcbRating ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of electrical panel board mcb" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusModelNumber" ;
            sh:path :hasMainBusModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Electrical panel board mcb initial cost" ;
            sh:maxCount 1 ;
            sh:name "MainBusInitialCost" ;
            sh:path :hasMainBusInitialCost ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubSubComponentTypeId" ;
            sh:node :SubSubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Input voltage" ;
            sh:maxCount 1 ;
            sh:name "InputVoltage" ;
            sh:path :hasInputVoltage ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical panel board mcb turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "MainBusTurnoverDate" ;
            sh:path :hasMainBusTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical panel board mcb tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusTagNumber" ;
            sh:path :hasMainBusTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Short circuit rating" ;
            sh:maxCount 1 ;
            sh:name "ShortCircuitRating" ;
            sh:path :hasShortCircuitRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Max number of poles" ;
            sh:maxCount 1 ;
            sh:name "MaxNumberOfPoles" ;
            sh:path :hasMaxNumberOfPoles ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Output phases" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "OutputPhases" ;
            sh:path :hasOutputPhases ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Current rating" ;
            sh:maxCount 1 ;
            sh:name "MainBusCurrentRating" ;
            sh:path :hasMainBusCurrentRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Input phases" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "InputPhases" ;
            sh:path :hasInputPhases ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ElectricalPanelBoardSubComponentId" ;
            sh:path :hasElectricalPanelBoardSubComponentId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical panel board mcb maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusMaintenanceInterval" ;
            sh:path :hasMainBusMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical panel board mcb commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "MainBusCommissionDate" ;
            sh:path :hasMainBusCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Electrical panel board mcb expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "MainBusExpectedReplacementCost" ;
            sh:path :hasMainBusExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Material" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusMaterial" ;
            sh:path :hasMainBusMaterial ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:ElectricalPanelBoardMlo a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Input phases" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "InputPhases" ;
            sh:path :hasInputPhases ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of electrical panel board mlo" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusSerialNumber" ;
            sh:path :hasMainBusSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "MainBusInstallationDate" ;
            sh:path :hasMainBusInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical panel board mlo maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusMaintenanceInterval" ;
            sh:path :hasMainBusMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical panel board mlo commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "MainBusCommissionDate" ;
            sh:path :hasMainBusCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Input voltage" ;
            sh:maxCount 1 ;
            sh:name "InputVoltage" ;
            sh:path :hasInputVoltage ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Electrical panel board mlo expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "MainBusExpectedReplacementCost" ;
            sh:path :hasMainBusExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Material" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusMaterial" ;
            sh:path :hasMainBusMaterial ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Electrical panel board mlo life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "MainBusDurationLifeYear" ;
            sh:path :hasMainBusDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Short circuit rating" ;
            sh:maxCount 1 ;
            sh:name "ShortCircuitRating" ;
            sh:path :hasShortCircuitRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Main bus name" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "MainBusName" ;
            sh:path :hasMainBusName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubSubComponentTypeId" ;
            sh:node :SubSubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Output phases" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "OutputPhases" ;
            sh:path :hasOutputPhases ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Current rating" ;
            sh:maxCount 1 ;
            sh:name "MainBusCurrentRating" ;
            sh:path :hasMainBusCurrentRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of electrical panel board mlo" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusModelNumber" ;
            sh:path :hasMainBusModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical panel board mlo expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "MainBusExpectedEndOfLife" ;
            sh:path :hasMainBusExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Electrical panel board mlo initial cost" ;
            sh:maxCount 1 ;
            sh:name "MainBusInitialCost" ;
            sh:path :hasMainBusInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical panel board mlo turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "MainBusTurnoverDate" ;
            sh:path :hasMainBusTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Max number of poles" ;
            sh:maxCount 1 ;
            sh:name "MaxNumberOfPoles" ;
            sh:path :hasMaxNumberOfPoles ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical panel board mlo tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusTagNumber" ;
            sh:path :hasMainBusTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ElectricalPanelBoardSubComponentId" ;
            sh:path :hasElectricalPanelBoardSubComponentId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:ElectricalSystem a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Type of wire" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "WireType" ;
            sh:path :hasWireType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ElectricalSystemId" ;
            sh:path :hasElectricalSystemId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Amount of electric current flowing through a unit cross-sectional area" ;
            sh:maxCount 1 ;
            sh:name "ElectricalCurrentDensity" ;
            sh:path :hasElectricalCurrentDensity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Connected demand other" ;
            sh:maxCount 1 ;
            sh:name "OtherConnectedDemand" ;
            sh:path :hasOtherConnectedDemand ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Maximum number of pole breakers" ;
            sh:maxCount 1 ;
            sh:name "MaximumNumberOfPoleBreakers" ;
            sh:path :hasMaximumNumberOfPoleBreakers ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Estimated demand other" ;
            sh:maxCount 1 ;
            sh:name "OtherEstimatedDemand" ;
            sh:path :hasOtherEstimatedDemand ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Number of panels" ;
            sh:maxCount 1 ;
            sh:name "TotalPanels" ;
            sh:path :hasTotalPanels ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Circuit load name" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "CircuitLoadName" ;
            sh:path :hasCircuitLoadName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Estimated demand HVAC" ;
            sh:maxCount 1 ;
            sh:name "HVACEstimatedDemand" ;
            sh:path :hasHVACEstimatedDemand ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Amount of current an amplifier demands while it is operating in amps" ;
            sh:maxCount 1 ;
            sh:name "CurrentDraw" ;
            sh:path :hasCurrentDraw ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "True amount of current" ;
            sh:maxCount 1 ;
            sh:name "TrueCurrent" ;
            sh:path :hasTrueCurrent ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Connected demand power" ;
            sh:maxCount 1 ;
            sh:name "PowerConnectedDemand" ;
            sh:path :hasPowerConnectedDemand ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Connected demand HVAC" ;
            sh:maxCount 1 ;
            sh:name "HVACConnectedDemand" ;
            sh:path :hasHVACConnectedDemand ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Connected demand lighting" ;
            sh:maxCount 1 ;
            sh:name "LightingConnectedDemand" ;
            sh:path :hasLightingConnectedDemand ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Number of runs" ;
            sh:maxCount 1 ;
            sh:name "NumberOfRuns" ;
            sh:path :hasNumberOfRuns ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Power factor usually in percentage and expression of energy efficiency" ;
            sh:maxCount 1 ;
            sh:name "ElectricalPowerFactor" ;
            sh:path :hasElectricalPowerFactor ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Number of poles" ;
            sh:maxCount 1 ;
            sh:name "NumberOfPoles" ;
            sh:path :hasNumberOfPoles ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SystemId" ;
            sh:node :SystemId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Size of wire in square millimeters" ;
            sh:maxCount 1 ;
            sh:name "WireSize" ;
            sh:path :hasWireSize ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Dedicated circuit (Y/N)" ;
            sh:maxCount 1 ;
            sh:name "DedicatedCircuit" ;
            sh:path :hasDedicatedCircuit ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Number of neutral conductors" ;
            sh:maxCount 1 ;
            sh:name "NumberOfNeutralConductors" ;
            sh:path :hasNumberOfNeutralConductors ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Estimated demand" ;
            sh:maxCount 1 ;
            sh:name "EstimatedDemand" ;
            sh:path :hasEstimatedDemand ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Circuit name" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "CircuitName" ;
            sh:path :hasCircuitName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Electrical source" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ElectricalSource" ;
            sh:path :hasElectricalSource ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Number of hot conductors" ;
            sh:maxCount 1 ;
            sh:name "NumberOfHotConductors" ;
            sh:path :hasNumberOfHotConductors ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Connected demand. The sum of ratings of all electrical equipments that are connected at the supply point regardless of their status of operation" ;
            sh:maxCount 1 ;
            sh:name "ConnectedDemand" ;
            sh:path :hasConnectedDemand ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Circuit number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "CircuitNumber" ;
            sh:path :hasCircuitNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "True amount of load" ;
            sh:maxCount 1 ;
            sh:name "TrueLoad" ;
            sh:path :hasTrueLoad ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Estimated demand lighting" ;
            sh:maxCount 1 ;
            sh:name "LightingEstimatedDemand" ;
            sh:path :hasLightingEstimatedDemand ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Estimated demand power" ;
            sh:maxCount 1 ;
            sh:name "PowerEstimatedDemand" ;
            sh:path :hasPowerEstimatedDemand ] .

:ElectricalVehicleChargingStation a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ElectricalVehicleChargingStationId" ;
            sh:path :hasElectricalVehicleChargingStationId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Charging level" ;
            sh:maxCount 1 ;
            sh:name "ChargingLevel" ;
            sh:path :hasChargingLevel ] .

:ElectronicSafetyAndSecuritySystem a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ElectronicSafetyAndSecuritySystemId" ;
            sh:path :hasElectronicSafetyAndSecuritySystemId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Fail safe capability (Y/N)" ;
            sh:maxCount 1 ;
            sh:name "FailSafeCapability" ;
            sh:path :hasFailSafeCapability ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Type of display" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DisplayType" ;
            sh:path :hasDisplayType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SystemId" ;
            sh:node :SystemId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Type of alarm" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "AlarmType" ;
            sh:path :hasAlarmType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Backup battery capacity (Y/N)" ;
            sh:maxCount 1 ;
            sh:name "BackupBatteryCapacity" ;
            sh:path :hasBackupBatteryCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "System status of electronic safety and security system" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SystemStatus" ;
            sh:path :hasSystemStatus ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Status code of alarm" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "StatusCode" ;
            sh:path :hasStatusCode ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:Elevator a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Max travel distance" ;
            sh:maxCount 1 ;
            sh:name "MaxTravelDistance" ;
            sh:path :hasMaxTravelDistance ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Elevator type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ElevatorType" ;
            sh:path :hasElevatorType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Fire service access elevator" ;
            sh:maxCount 1 ;
            sh:name "FireServiceAccessElevator" ;
            sh:path :hasFireServiceAccessElevator ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Emergency communication two way message display" ;
            sh:maxCount 1 ;
            sh:name "EmergencyCommunicationOneWayVideo" ;
            sh:path :hasEmergencyCommunicationOneWayVideo ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Max travel speed" ;
            sh:maxCount 1 ;
            sh:name "MaxTravelSpeed" ;
            sh:path :hasMaxTravelSpeed ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Heating capacity in british thermal unit (btu)" ;
            sh:maxCount 1 ;
            sh:name "WeightCapacity" ;
            sh:path :hasWeightCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Person capacity" ;
            sh:maxCount 1 ;
            sh:name "PersonCapacity" ;
            sh:path :hasPersonCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Emergency communication two way voice" ;
            sh:maxCount 1 ;
            sh:name "EmergencyCommunicationTwoWayVoice" ;
            sh:path :hasEmergencyCommunicationTwoWayVoice ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Max landings" ;
            sh:maxCount 1 ;
            sh:name "MaxLandings" ;
            sh:path :hasMaxLandings ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ElevatorId" ;
            sh:path :hasElevatorId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Emergency communication two way message display" ;
            sh:maxCount 1 ;
            sh:name "EmergencyCommunicationTwoWayMessageDisplay" ;
            sh:path :hasEmergencyCommunicationTwoWayMessageDisplay ] .

:ElevatorMachine a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Elevator machine type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ElevatorMachineType" ;
            sh:path :hasElevatorMachineType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ElevatorMachineId" ;
            sh:path :hasElevatorMachineId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Heating capacity in british thermal unit (btu)" ;
            sh:maxCount 1 ;
            sh:name "WeightCapacity" ;
            sh:path :hasWeightCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Motor power" ;
            sh:maxCount 1 ;
            sh:name "MotorPower" ;
            sh:path :hasMotorPower ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ] .

:Escalator a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "EscalatorId" ;
            sh:path :hasEscalatorId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Motor power" ;
            sh:maxCount 1 ;
            sh:name "MaxVerticalRise" ;
            sh:path :hasMaxVerticalRise ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Escalator type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "EscalatorType" ;
            sh:path :hasEscalatorType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Step width" ;
            sh:maxCount 1 ;
            sh:name "StepWidth" ;
            sh:path :hasStepWidth ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Inclination" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Inclination" ;
            sh:path :hasInclination ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Speed of escalator" ;
            sh:maxCount 1 ;
            sh:name "MaxTravelSpeed" ;
            sh:path :hasMaxTravelSpeed ] .

:EthernetSwitchPort a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Port speed" ;
            sh:maxCount 1 ;
            sh:name "PortSpeed" ;
            sh:path :hasPortSpeed ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Port type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PortType" ;
            sh:path :hasPortType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "It rack position" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "RackPosition" ;
            sh:path :hasRackPosition ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Mounted in it rack" ;
            sh:maxCount 1 ;
            sh:name "MountedInRack" ;
            sh:path :hasMountedInRack ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "EthernetSwitchPortId" ;
            sh:path :hasEthernetSwitchPortId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:FanCoilUnit a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan coil unit type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanCoilUnitType" ;
            sh:path :hasFanCoilUnitType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingExpectedEndOfLife" ;
            sh:path :hasSecondaryCoolingExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Commission date if duct inlet in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletCommissionDate" ;
            sh:path :hasDuctInletCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Nominal cooling capacity" ;
            sh:maxCount 1 ;
            sh:name "NominalCoolingCapacity" ;
            sh:path :hasNominalCoolingCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "DuctInletExpectedReplacementCost" ;
            sh:path :hasDuctInletExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Secondary cooling life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingDurationLifeYear" ;
            sh:path :hasSecondaryCoolingDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Refrigerant type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "RefrigerantType" ;
            sh:path :hasRefrigerantType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletTagNumber" ;
            sh:path :hasDuctInletTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingTurnoverDate" ;
            sh:path :hasSecondaryCoolingTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan max flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FanMaxAirflowRating" ;
            sh:path :hasFanMaxAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling name of product" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingName" ;
            sh:path :hasSecondaryCoolingName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletExpectedEndOfLife" ;
            sh:path :hasDuctInletExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanSerialNumber" ;
            sh:path :hasFanSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingCommissionDate" ;
            sh:path :hasPrimaryCoolingCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of primary cooling" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingModelNumber" ;
            sh:path :hasPrimaryCoolingModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet model number" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletModel" ;
            sh:path :hasDuctInletModel ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan fan drive type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanDriveType" ;
            sh:path :hasFanDriveType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling name of product" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingName" ;
            sh:path :hasPrimaryCoolingName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan min flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FanMinAirflowRating" ;
            sh:path :hasFanMinAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Primary cooling initial cost" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingInitialCost" ;
            sh:path :hasPrimaryCoolingInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletSerialNumber" ;
            sh:path :hasDuctInletSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Min flow capacity" ;
            sh:maxCount 1 ;
            sh:name "MinAirflowRating" ;
            sh:path :hasMinAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling method type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingMethodType" ;
            sh:path :hasSecondaryCoolingMethodType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Secondary cooling outside diameter" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingOutsideDiameter" ;
            sh:path :hasSecondaryCoolingOutsideDiameter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "FanName" ;
            sh:path :hasFanName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletTurnoverDate" ;
            sh:path :hasDuctInletTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Filter type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FilterType" ;
            sh:path :hasFilterType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanTagNumber" ;
            sh:path :hasFanTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of secondary cooling" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingSerialNumber" ;
            sh:path :hasSecondaryCoolingSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingTurnoverDate" ;
            sh:path :hasPrimaryCoolingTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "FanCoilUnitId" ;
            sh:path :hasFanCoilUnitId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan nominal airflow" ;
            sh:maxCount 1 ;
            sh:name "FanNominalAirflow" ;
            sh:path :hasFanNominalAirflow ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of secondary cooling" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingModelNumber" ;
            sh:path :hasSecondaryCoolingModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Secondary cooling expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingExpectedReplacementCost" ;
            sh:path :hasSecondaryCoolingExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of Duct inlet" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletName" ;
            sh:path :hasDuctInletName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingInstallationDate" ;
            sh:path :hasSecondaryCoolingInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "FanExpectedReplacementCost" ;
            sh:path :hasFanExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanMaintenanceInterval" ;
            sh:path :hasFanMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan initial cost" ;
            sh:maxCount 1 ;
            sh:name "FanInitialCost" ;
            sh:path :hasFanInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Max flow capacity" ;
            sh:maxCount 1 ;
            sh:name "MaxAirflowRating" ;
            sh:path :hasMaxAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Primary cooling expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingExpectedReplacementCost" ;
            sh:path :hasPrimaryCoolingExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingCommissionDate" ;
            sh:path :hasSecondaryCoolingCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanModelNumber" ;
            sh:path :hasFanModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingInstallationDate" ;
            sh:path :hasPrimaryCoolingInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingMaintenanceInterval" ;
            sh:path :hasSecondaryCoolingMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingExpectedEndOfLife" ;
            sh:path :hasPrimaryCoolingExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Fan life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "FanDurationLifeYear" ;
            sh:path :hasFanDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan motor power" ;
            sh:maxCount 1 ;
            sh:name "FanMotorPower" ;
            sh:path :hasFanMotorPower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Net sensible cooling capacity" ;
            sh:maxCount 1 ;
            sh:name "NetSensibleCoolingCapacity" ;
            sh:path :hasNetSensibleCoolingCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling refrigerant type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingMethodRefrigerantType" ;
            sh:path :hasSecondaryCoolingMethodRefrigerantType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanTurnoverDate" ;
            sh:path :hasFanTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Currency " ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Currency" ;
            sh:path :hasCurrency ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingTagNumber" ;
            sh:path :hasPrimaryCoolingTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet initial cost" ;
            sh:maxCount 1 ;
            sh:name "DuctInletInitialCost" ;
            sh:path :hasDuctInletInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of primary cooling" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingSerialNumber" ;
            sh:path :hasPrimaryCoolingSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Secondary cooling initial cost" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingInitialCost" ;
            sh:path :hasSecondaryCoolingInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingTagNumber" ;
            sh:path :hasSecondaryCoolingTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet shape" ;
            sh:maxCount 1 ;
            sh:name "DuctInletShape" ;
            sh:path :hasDuctInletShape ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet size" ;
            sh:maxCount 1 ;
            sh:name "DuctInletSize" ;
            sh:path :hasDuctInletSize ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Primary cooling outside diameter" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingOutsideDiameter" ;
            sh:path :hasPrimaryCoolingOutsideDiameter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Primary cooling life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingDurationLifeYear" ;
            sh:path :hasPrimaryCoolingDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling method type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingMethodType" ;
            sh:path :hasPrimaryCoolingMethodType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingMaintenanceInterval" ;
            sh:path :hasPrimaryCoolingMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletMaintenanceInterval" ;
            sh:path :hasDuctInletMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanInstallationDate" ;
            sh:path :hasFanInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanCommissionDate" ;
            sh:path :hasFanCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletInstallationDate" ;
            sh:path :hasDuctInletInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling refrigerant type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingMethodRefrigerantType" ;
            sh:path :hasPrimaryCoolingMethodRefrigerantType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet configuration" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletConfiguration" ;
            sh:path :hasDuctInletConfiguration ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanExpectedEndOfLife" ;
            sh:path :hasFanExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Currency " ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletCurrency" ;
            sh:path :hasDuctInletCurrency ] .

:FanCoilUnitReheat a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Primary cooling expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingExpectedReplacementCost" ;
            sh:path :hasPrimaryCoolingExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "FanName" ;
            sh:path :hasFanName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Re heating initial cost" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingInitialCost" ;
            sh:path :hasReHeatingInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingExpectedEndOfLife" ;
            sh:path :hasSecondaryCoolingExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Refrigerant type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "RefrigerantType" ;
            sh:path :hasRefrigerantType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ReHeatingTagNumber" ;
            sh:path :hasReHeatingTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingTurnoverDate" ;
            sh:path :hasPrimaryCoolingTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingTagNumber" ;
            sh:path :hasPrimaryCoolingTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletExpectedEndOfLife" ;
            sh:path :hasDuctInletExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingInstallationDate" ;
            sh:path :hasSecondaryCoolingInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Fan life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "FanDurationLifeYear" ;
            sh:path :hasFanDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of Duct inlet" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletName" ;
            sh:path :hasDuctInletName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletMaintenanceInterval" ;
            sh:path :hasDuctInletMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Max flow capacity" ;
            sh:maxCount 1 ;
            sh:name "MaxAirflowRating" ;
            sh:path :hasMaxAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletSerialNumber" ;
            sh:path :hasDuctInletSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan max rate" ;
            sh:maxCount 1 ;
            sh:name "FanMaxAirflowRating" ;
            sh:path :hasFanMaxAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Commission date if duct inlet in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletCommissionDate" ;
            sh:path :hasDuctInletCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Re heating life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingDurationLifeYear" ;
            sh:path :hasReHeatingDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "FanPoweredBoxReheatId" ;
            sh:path :hasFanPoweredBoxReheatId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Re heating expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingExpectedReplacementCost" ;
            sh:path :hasReHeatingExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanTagNumber" ;
            sh:path :hasFanTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan nominal airflow" ;
            sh:maxCount 1 ;
            sh:name "FanNominalAirflow" ;
            sh:path :hasFanNominalAirflow ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingTagNumber" ;
            sh:path :hasSecondaryCoolingTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of re heating" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ReHeatingModelNumber" ;
            sh:path :hasReHeatingModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan initial cost" ;
            sh:maxCount 1 ;
            sh:name "FanInitialCost" ;
            sh:path :hasFanInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Min flow capacity" ;
            sh:maxCount 1 ;
            sh:name "MinAirflowRating" ;
            sh:path :hasMinAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanMaintenanceInterval" ;
            sh:path :hasFanMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Primary cooling initial cost" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingInitialCost" ;
            sh:path :hasPrimaryCoolingInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Secondary cooling initial cost" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingInitialCost" ;
            sh:path :hasSecondaryCoolingInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanSerialNumber" ;
            sh:path :hasFanSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingCommissionDate" ;
            sh:path :hasPrimaryCoolingCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingTurnoverDate" ;
            sh:path :hasSecondaryCoolingTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingExpectedEndOfLife" ;
            sh:path :hasReHeatingExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling refrigerant type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingMethodefrigerantType" ;
            sh:path :hasPrimaryCoolingMethodefrigerantType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating name of product" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "ReHeatingName" ;
            sh:path :hasReHeatingName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet configuration" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletConfiguration" ;
            sh:path :hasDuctInletConfiguration ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ReHeatingType" ;
            sh:path :hasReHeatingType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "FanExpectedReplacementCost" ;
            sh:path :hasFanExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingMaintenanceInterval" ;
            sh:path :hasSecondaryCoolingMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of primary cooling" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingSerialNumber" ;
            sh:path :hasPrimaryCoolingSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Net sensible cooling capacity" ;
            sh:maxCount 1 ;
            sh:name "NetSensibleCoolingCapacity" ;
            sh:path :hasNetSensibleCoolingCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ReHeatingMaintenanceInterval" ;
            sh:path :hasReHeatingMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingTurnoverDate" ;
            sh:path :hasReHeatingTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Re heating outside diameter" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingOutsideDiameter" ;
            sh:path :hasReHeatingOutsideDiameter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Primary cooling life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingDurationLifeYear" ;
            sh:path :hasPrimaryCoolingDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan motor power" ;
            sh:maxCount 1 ;
            sh:name "FanMotorPower" ;
            sh:path :hasFanMotorPower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling method type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingMethodType" ;
            sh:path :hasPrimaryCoolingMethodType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan coil unit reheat type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanCoilUnitReheatType" ;
            sh:path :hasFanCoilUnitReheatType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan coil unit reheat configuration" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "Configuration" ;
            sh:path :hasConfiguration ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Secondary cooling life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingDurationLifeYear" ;
            sh:path :hasSecondaryCoolingDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingInstallationDate" ;
            sh:path :hasPrimaryCoolingInstallationDate ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubSubComponentTypeId" ;
            sh:node :SubSubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingCommissionDate" ;
            sh:path :hasSecondaryCoolingCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingMaintenanceInterval" ;
            sh:path :hasPrimaryCoolingMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Filter type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FilterType" ;
            sh:path :hasFilterType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of re heating" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ReHeatingSerialNumber" ;
            sh:path :hasReHeatingSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Secondary cooling expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingExpectedReplacementCost" ;
            sh:path :hasSecondaryCoolingExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling name of product" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingName" ;
            sh:path :hasPrimaryCoolingName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling name of product" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingName" ;
            sh:path :hasSecondaryCoolingName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of primary cooling" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PrimaryCoolingModelNumber" ;
            sh:path :hasPrimaryCoolingModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling method type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingMethodType" ;
            sh:path :hasSecondaryCoolingMethodType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet size" ;
            sh:maxCount 1 ;
            sh:name "DuctInletSize" ;
            sh:path :hasDuctInletSize ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanModelNumber" ;
            sh:path :hasFanModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Primary cooling outside diameter" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingOutsideDiameter" ;
            sh:path :hasPrimaryCoolingOutsideDiameter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanInstallationDate" ;
            sh:path :hasFanInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanTurnoverDate" ;
            sh:path :hasFanTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Currency " ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletCurrency" ;
            sh:path :hasDuctInletCurrency ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet model number" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletModel" ;
            sh:path :hasDuctInletModel ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Primary cooling expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "PrimaryCoolingExpectedEndOfLife" ;
            sh:path :hasPrimaryCoolingExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Currency " ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Currency" ;
            sh:path :hasCurrency ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Nominal cooling capacity" ;
            sh:maxCount 1 ;
            sh:name "NominalCoolingCapacity" ;
            sh:path :hasNominalCoolingCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan min flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FanMinAirflowRating" ;
            sh:path :hasFanMinAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletTagNumber" ;
            sh:path :hasDuctInletTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan fan drive type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanDriveType" ;
            sh:path :hasFanDriveType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet initial cost" ;
            sh:maxCount 1 ;
            sh:name "DuctInletInitialCost" ;
            sh:path :hasDuctInletInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingInstallationDate" ;
            sh:path :hasReHeatingInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Nominal heating capacity" ;
            sh:maxCount 1 ;
            sh:name "NominalHeatingCapacity" ;
            sh:path :hasNominalHeatingCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "DuctInletExpectedReplacementCost" ;
            sh:path :hasDuctInletExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletTurnoverDate" ;
            sh:path :hasDuctInletTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanExpectedEndOfLife" ;
            sh:path :hasFanExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of secondary cooling" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingModelNumber" ;
            sh:path :hasSecondaryCoolingModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingCommissionDate" ;
            sh:path :hasReHeatingCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletInstallationDate" ;
            sh:path :hasDuctInletInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanCommissionDate" ;
            sh:path :hasFanCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet shape" ;
            sh:maxCount 1 ;
            sh:name "DuctInletShape" ;
            sh:path :hasDuctInletShape ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of secondary cooling" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingSerialNumber" ;
            sh:path :hasSecondaryCoolingSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Secondary cooling refrigerant type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SecondaryCoolingMethodRefrigerantType" ;
            sh:path :hasSecondaryCoolingMethodRefrigerantType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Secondary cooling outside diameter" ;
            sh:maxCount 1 ;
            sh:name "SecondaryCoolingOutsideDiameter" ;
            sh:path :hasSecondaryCoolingOutsideDiameter ] .

:FanPoweredBox a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "FanName" ;
            sh:path :hasFanName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Fan life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "FanDurationLifeYear" ;
            sh:path :hasFanDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Max flow capacity" ;
            sh:maxCount 1 ;
            sh:name "MaxAirflowRating" ;
            sh:path :hasMaxAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet size" ;
            sh:maxCount 1 ;
            sh:name "DuctInletSize" ;
            sh:path :hasDuctInletSize ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan fan drive type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanDriveType" ;
            sh:path :hasFanDriveType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan max flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FanMaxAirflowRating" ;
            sh:path :hasFanMaxAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "FanPoweredBoxId" ;
            sh:path :hasFanPoweredBoxId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "FanExpectedReplacementCost" ;
            sh:path :hasFanExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Commission date if duct inlet in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletCommissionDate" ;
            sh:path :hasDuctInletCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletMaintenanceInterval" ;
            sh:path :hasDuctInletMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan initial cost" ;
            sh:maxCount 1 ;
            sh:name "FanInitialCost" ;
            sh:path :hasFanInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of Duct inlet" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletName" ;
            sh:path :hasDuctInletName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanCommissionDate" ;
            sh:path :hasFanCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Currency " ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletCurrency" ;
            sh:path :hasDuctInletCurrency ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet model number" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletModel" ;
            sh:path :hasDuctInletModel ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletTurnoverDate" ;
            sh:path :hasDuctInletTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan nominal airflow" ;
            sh:maxCount 1 ;
            sh:name "FanNominalAirflow" ;
            sh:path :hasFanNominalAirflow ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubSubComponentTypeId" ;
            sh:node :SubSubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletInstallationDate" ;
            sh:path :hasDuctInletInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanInstallationDate" ;
            sh:path :hasFanInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet initial cost" ;
            sh:maxCount 1 ;
            sh:name "DuctInletInitialCost" ;
            sh:path :hasDuctInletInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan powered box configuration" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "Configuration" ;
            sh:path :hasConfiguration ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan motor power" ;
            sh:maxCount 1 ;
            sh:name "FanMotorPower" ;
            sh:path :hasFanMotorPower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanTagNumber" ;
            sh:path :hasFanTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet shape" ;
            sh:maxCount 1 ;
            sh:name "DuctInletShape" ;
            sh:path :hasDuctInletShape ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "DuctInletExpectedReplacementCost" ;
            sh:path :hasDuctInletExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanExpectedEndOfLife" ;
            sh:path :hasFanExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletSerialNumber" ;
            sh:path :hasDuctInletSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Currency " ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Currency" ;
            sh:path :hasCurrency ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet configuration" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletConfiguration" ;
            sh:path :hasDuctInletConfiguration ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanTurnoverDate" ;
            sh:path :hasFanTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletTagNumber" ;
            sh:path :hasDuctInletTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Min flow capacity" ;
            sh:maxCount 1 ;
            sh:name "MinAirflowRating" ;
            sh:path :hasMinAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanMaintenanceInterval" ;
            sh:path :hasFanMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanSerialNumber" ;
            sh:path :hasFanSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanModelNumber" ;
            sh:path :hasFanModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletExpectedEndOfLife" ;
            sh:path :hasDuctInletExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan min flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FanMinAirflowRating" ;
            sh:path :hasFanMinAirflowRating ] .

:FanPoweredBoxReheat a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Currency " ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Currency" ;
            sh:path :hasCurrency ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Re heating initial cost" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingInitialCost" ;
            sh:path :hasReHeatingInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of re heating" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ReHeatingModelNumber" ;
            sh:path :hasReHeatingModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan nominal airflow" ;
            sh:maxCount 1 ;
            sh:name "FanNominalAirflow" ;
            sh:path :hasFanNominalAirflow ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Min flow capacity" ;
            sh:maxCount 1 ;
            sh:name "MinAirflowRating" ;
            sh:path :hasMinAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ReHeatingTagNumber" ;
            sh:path :hasReHeatingTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Max flow capacity" ;
            sh:maxCount 1 ;
            sh:name "MaxAirflowRating" ;
            sh:path :hasMaxAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanExpectedEndOfLife" ;
            sh:path :hasFanExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Commission date if duct inlet in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletCommissionDate" ;
            sh:path :hasDuctInletCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanCommissionDate" ;
            sh:path :hasFanCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Re heating life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingDurationLifeYear" ;
            sh:path :hasReHeatingDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "FanExpectedReplacementCost" ;
            sh:path :hasFanExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "FanName" ;
            sh:path :hasFanName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet size" ;
            sh:maxCount 1 ;
            sh:name "DuctInletSize" ;
            sh:path :hasDuctInletSize ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubSubComponentTypeId" ;
            sh:node :SubSubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Re heating outside diameter" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingOutsideDiameter" ;
            sh:path :hasReHeatingOutsideDiameter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletTagNumber" ;
            sh:path :hasDuctInletTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan max flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FanMaxAirflowRating" ;
            sh:path :hasFanMaxAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletTurnoverDate" ;
            sh:path :hasDuctInletTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet model number" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletModel" ;
            sh:path :hasDuctInletModel ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan powered box configuration" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "Configuration" ;
            sh:path :hasConfiguration ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletMaintenanceInterval" ;
            sh:path :hasDuctInletMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "FanPoweredBoxReheatId" ;
            sh:path :hasFanPoweredBoxReheatId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan motor power" ;
            sh:maxCount 1 ;
            sh:name "FanMotorPower" ;
            sh:path :hasFanMotorPower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingCommissionDate" ;
            sh:path :hasReHeatingCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "DuctInletExpectedReplacementCost" ;
            sh:path :hasDuctInletExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingTurnoverDate" ;
            sh:path :hasReHeatingTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ReHeatingType" ;
            sh:path :hasReHeatingType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan initial cost" ;
            sh:maxCount 1 ;
            sh:name "FanInitialCost" ;
            sh:path :hasFanInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet configuration" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletConfiguration" ;
            sh:path :hasDuctInletConfiguration ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan min flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FanMinAirflowRating" ;
            sh:path :hasFanMinAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletInstallationDate" ;
            sh:path :hasDuctInletInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanInstallationDate" ;
            sh:path :hasFanInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanSerialNumber" ;
            sh:path :hasFanSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Nominal heating capacity" ;
            sh:maxCount 1 ;
            sh:name "NominalHeatingCapacity" ;
            sh:path :hasNominalHeatingCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of Duct inlet" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletName" ;
            sh:path :hasDuctInletName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of re heating" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ReHeatingSerialNumber" ;
            sh:path :hasReHeatingSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet initial cost" ;
            sh:maxCount 1 ;
            sh:name "DuctInletInitialCost" ;
            sh:path :hasDuctInletInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan fan drive type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanDriveType" ;
            sh:path :hasFanDriveType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletExpectedEndOfLife" ;
            sh:path :hasDuctInletExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet shape" ;
            sh:maxCount 1 ;
            sh:name "DuctInletShape" ;
            sh:path :hasDuctInletShape ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanTurnoverDate" ;
            sh:path :hasFanTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingInstallationDate" ;
            sh:path :hasReHeatingInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanTagNumber" ;
            sh:path :hasFanTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Re heating expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingExpectedReplacementCost" ;
            sh:path :hasReHeatingExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Fan life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "FanDurationLifeYear" ;
            sh:path :hasFanDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanMaintenanceInterval" ;
            sh:path :hasFanMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanModelNumber" ;
            sh:path :hasFanModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletSerialNumber" ;
            sh:path :hasDuctInletSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "ReHeatingExpectedEndOfLife" ;
            sh:path :hasReHeatingExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating name of product" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "ReHeatingName" ;
            sh:path :hasReHeatingName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Re heating maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ReHeatingMaintenanceInterval" ;
            sh:path :hasReHeatingMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Currency " ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletCurrency" ;
            sh:path :hasDuctInletCurrency ] .

:Faucet a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "FaucetId" ;
            sh:path :hasFaucetId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Max flow capacity" ;
            sh:maxCount 1 ;
            sh:name "MaxFlowRate" ;
            sh:path :hasMaxFlowRate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Mounted on" ;
            sh:maxCount 1 ;
            sh:name "MountedOn" ;
            sh:path :hasMountedOn ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Faucet type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FaucetType" ;
            sh:path :hasFaucetType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Number of handles" ;
            sh:maxCount 1 ;
            sh:name "NumberOfHandles" ;
            sh:path :hasNumberOfHandles ] .

:FireDamper a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Currency " ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletCurrency" ;
            sh:path :hasDuctInletCurrency ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet size" ;
            sh:maxCount 1 ;
            sh:name "DuctInletSize" ;
            sh:path :hasDuctInletSize ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletTagNumber" ;
            sh:path :hasDuctInletTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet configuration" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletConfiguration" ;
            sh:path :hasDuctInletConfiguration ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletSerialNumber" ;
            sh:path :hasDuctInletSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of Duct inlet" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletName" ;
            sh:path :hasDuctInletName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet initial cost" ;
            sh:maxCount 1 ;
            sh:name "DuctInletInitialCost" ;
            sh:path :hasDuctInletInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Class component belongs to" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "LeakageClass" ;
            sh:path :hasLeakageClass ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet model number" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletModel" ;
            sh:path :hasDuctInletModel ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "FireDamperId" ;
            sh:path :hasFireDamperId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletExpectedEndOfLife" ;
            sh:path :hasDuctInletExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletTurnoverDate" ;
            sh:path :hasDuctInletTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Commission date if duct inlet in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletCommissionDate" ;
            sh:path :hasDuctInletCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletInstallationDate" ;
            sh:path :hasDuctInletInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet shape" ;
            sh:maxCount 1 ;
            sh:name "DuctInletShape" ;
            sh:path :hasDuctInletShape ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "DuctInletExpectedReplacementCost" ;
            sh:path :hasDuctInletExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fire rating of fire damper" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FireRating" ;
            sh:path :hasFireRating ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Blade type of damper (usually two different types of blade dampers used to modulate air flow: parallel and opposed blade dampers)" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "BladeType" ;
            sh:path :hasBladeType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletMaintenanceInterval" ;
            sh:path :hasDuctInletMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:FirePump a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Head capacity" ;
            sh:maxCount 1 ;
            sh:name "HeadCapacity" ;
            sh:path :hasHeadCapacity ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubSubComponentTypeId" ;
            sh:node :SubSubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Pumping media" ;
            sh:maxCount 1 ;
            sh:maxLength 100 ;
            sh:minLength 1 ;
            sh:name "PumpingMedia" ;
            sh:path :hasPumpingMedia ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Pressure capacity" ;
            sh:maxCount 1 ;
            sh:name "PressureCapacity" ;
            sh:path :hasPressureCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FlowCapacity" ;
            sh:path :hasFlowCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "FirePumpId" ;
            sh:path :hasFirePumpId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:FireSprinklerHead a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubSubComponentTypeId" ;
            sh:node :SubSubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fire sprinkler head type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FireSprinklerHeadType" ;
            sh:path :hasFireSprinklerHeadType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "K factor imperial" ;
            sh:maxCount 1 ;
            sh:name "KFactorImperial" ;
            sh:path :hasKFactorImperial ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "K factor metric" ;
            sh:maxCount 1 ;
            sh:name "KFactorMetric" ;
            sh:path :hasKFactorMetric ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "FireSprinklerHeadId" ;
            sh:path :hasFireSprinklerHeadId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:Floor a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "FloorId" ;
            sh:node :FloorId ;
            sh:path base:hasPrimaryKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Number of floor" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "FloorNumber" ;
            sh:path :hasFloorNumber ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "The records can be used from this date onwards in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ValidFrom" ;
            sh:path :hasValidFrom ],
        [ a sh:PropertyShape ;
            sh:description "Reference to the Building which the Floor belongs to" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "BuildingId" ;
            sh:node :BuildingId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "User specific Floor Code" ;
            sh:maxCount 1 ;
            sh:maxLength 70 ;
            sh:minLength 1 ;
            sh:name "FloorCode" ;
            sh:path :hasFloorCode ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of floor" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "Name" ;
            sh:path :hasName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "The records can be used until this date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ValidUntil" ;
            sh:path :hasValidUntil ] .

:FlushometerValve a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "FlushometerValveId" ;
            sh:path :hasFlushometerValveId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Water per flush" ;
            sh:maxCount 1 ;
            sh:name "WaterPerFlush" ;
            sh:path :hasWaterPerFlush ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Faucet type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FlushometerValveType" ;
            sh:path :hasFlushometerValveType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Technology" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Technology" ;
            sh:path :hasTechnology ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Mounted on" ;
            sh:maxCount 1 ;
            sh:name "MountedOn" ;
            sh:path :hasMountedOn ] .

:GasMeter a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "GasMeterId" ;
            sh:path :hasGasMeterId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Substance that is measured" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Measures" ;
            sh:path :hasMeasures ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Water meter type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "GasMeterType" ;
            sh:path :hasGasMeterType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Mass flow" ;
            sh:maxCount 1 ;
            sh:name "MassFlow" ;
            sh:path :hasMassFlow ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Volume flow" ;
            sh:maxCount 1 ;
            sh:name "Mass" ;
            sh:path :hasMass ] .

:Gateway a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Enabled (Y/N)" ;
            sh:maxCount 1 ;
            sh:name "Enabled" ;
            sh:path :hasEnabled ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "It rack position" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "RackPosition" ;
            sh:path :hasRackPosition ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Registration id" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "RegistrationId" ;
            sh:path :hasRegistrationId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Registration id" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ConnectorId" ;
            sh:path :hasConnectorId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "GatewayId" ;
            sh:path :hasGatewayId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Registration key" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "RegistrationKey" ;
            sh:path :hasRegistrationKey ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Detected (Y/N)" ;
            sh:maxCount 1 ;
            sh:name "Detected" ;
            sh:path :hasDetected ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Mounted in it rack" ;
            sh:maxCount 1 ;
            sh:name "MountedInRack" ;
            sh:path :hasMountedInRack ] .

:Generator a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Day tank capacity" ;
            sh:maxCount 1 ;
            sh:name "DayTankCapacity" ;
            sh:path :hasDayTankCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Standby power" ;
            sh:maxCount 1 ;
            sh:name "StandbyPower" ;
            sh:path :hasStandbyPower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Bulk storage capacity" ;
            sh:maxCount 1 ;
            sh:name "BulkStorageCapacity" ;
            sh:path :hasBulkStorageCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Prime power kva" ;
            sh:maxCount 1 ;
            sh:name "PrimePowerKva" ;
            sh:path :hasPrimePowerKva ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fuel type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FuelType" ;
            sh:path :hasFuelType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Frequency" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Frequency" ;
            sh:path :hasFrequency ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "GeneratorId" ;
            sh:path :hasGeneratorId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Output voltage" ;
            sh:maxCount 1 ;
            sh:name "OutputVoltage" ;
            sh:path :hasOutputVoltage ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Output phases" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "OutputPhases" ;
            sh:path :hasOutputPhases ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Mode of operation" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ModeOfOperation" ;
            sh:path :hasModeOfOperation ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Standby power" ;
            sh:maxCount 1 ;
            sh:name "PrimePower" ;
            sh:path :hasPrimePower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Standby power kva" ;
            sh:maxCount 1 ;
            sh:name "StandbyPowerKva" ;
            sh:path :hasStandbyPowerKva ] .

:HvacFan a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Min flow capacity" ;
            sh:maxCount 1 ;
            sh:name "MinAirflowRating" ;
            sh:path :hasMinAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "HvacFanId" ;
            sh:path :hasHvacFanId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Hvac fan drive type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DriveType" ;
            sh:path :hasDriveType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Motor power" ;
            sh:maxCount 1 ;
            sh:name "MotorPower" ;
            sh:path :hasMotorPower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Nominal airflow" ;
            sh:maxCount 1 ;
            sh:name "NominalAirflow" ;
            sh:path :hasNominalAirflow ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Max flow capacity" ;
            sh:maxCount 1 ;
            sh:name "MaxAirflowRating" ;
            sh:path :hasMaxAirflowRating ] .

:HvacHeatTracing a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Hvac pump type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "HvacHeatTracingType" ;
            sh:path :hasHvacHeatTracingType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "HvacTankId" ;
            sh:path :hasHvacTankId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Amount of power density" ;
            sh:maxCount 1 ;
            sh:name "PowerDensity" ;
            sh:path :hasPowerDensity ] .

:HvacPump a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Pumping media" ;
            sh:maxCount 1 ;
            sh:maxLength 100 ;
            sh:minLength 1 ;
            sh:name "PumpingMedia" ;
            sh:path :hasPumpingMedia ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Pressure capacity of hvac pump" ;
            sh:maxCount 1 ;
            sh:name "PressureCapacity" ;
            sh:path :hasPressureCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "HvacPumpId" ;
            sh:path :hasHvacPumpId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Hvac pump type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "HvacPumpType" ;
            sh:path :hasHvacPumpType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Head capacity" ;
            sh:maxCount 1 ;
            sh:name "HeadCapacity" ;
            sh:path :hasHeadCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FlowCapacity" ;
            sh:path :hasFlowCapacity ] .

:HvacShutOffValve a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FlowCapacity" ;
            sh:path :hasFlowCapacity ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Pipe diameter of hvac sub component" ;
            sh:maxCount 1 ;
            sh:name "PipeDiameter" ;
            sh:path :hasPipeDiameter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Pressure capacity of hvac sub component" ;
            sh:maxCount 1 ;
            sh:name "PressureCapacity" ;
            sh:path :hasPressureCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "HvacShutOffValveId" ;
            sh:path :hasHvacShutOffValveId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:HvacSystem a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Specified supply airflow" ;
            sh:maxCount 1 ;
            sh:name "CalculatedSupplyAirflow" ;
            sh:path :hasCalculatedSupplyAirflow ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "HvacSystemId" ;
            sh:path :hasHvacSystemId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Cooling sensible heat ratio" ;
            sh:maxCount 1 ;
            sh:name "CoolingSensibleHeatRatio" ;
            sh:path :hasCoolingSensibleHeatRatio ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Calculated cooling load per area" ;
            sh:maxCount 1 ;
            sh:name "CalculatedCoolingLoad" ;
            sh:path :hasCalculatedCoolingLoad ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Design heating load per area" ;
            sh:maxCount 1 ;
            sh:name "DesignHeatingLoad" ;
            sh:path :hasDesignHeatingLoad ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Specified supply airflow" ;
            sh:maxCount 1 ;
            sh:name "SpecifiedSupplyAirflow" ;
            sh:path :hasSpecifiedSupplyAirflow ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Actual hvac load" ;
            sh:maxCount 1 ;
            sh:name "ActualLoad" ;
            sh:path :hasActualLoad ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Heating capacity" ;
            sh:maxCount 1 ;
            sh:name "HeatingCapacity" ;
            sh:path :hasHeatingCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Manufacturer coil bypass factor" ;
            sh:maxCount 1 ;
            sh:name "ManufacturerCoilBypassFactor" ;
            sh:path :hasManufacturerCoilBypassFactor ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Calculated heating load per area" ;
            sh:maxCount 1 ;
            sh:name "CalculatedHeatingLoad" ;
            sh:path :hasCalculatedHeatingLoad ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Cooling capacity in tonnes" ;
            sh:maxCount 1 ;
            sh:name "CoolingCapacity" ;
            sh:path :hasCoolingCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Design load per area" ;
            sh:maxCount 1 ;
            sh:name "DesignLoadPerArea" ;
            sh:path :hasDesignLoadPerArea ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SystemId" ;
            sh:node :SystemId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Design cooling load per area" ;
            sh:maxCount 1 ;
            sh:name "DesignCoolingLoad" ;
            sh:path :hasDesignCoolingLoad ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Specified exhaust airflow" ;
            sh:maxCount 1 ;
            sh:name "SpecifiedExhaustAirflow" ;
            sh:path :hasSpecifiedExhaustAirflow ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Actual supply airflow" ;
            sh:maxCount 1 ;
            sh:name "ActualSupplyAirflow" ;
            sh:path :hasActualSupplyAirflow ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unit of load" ;
            sh:in ( "W/sqm" "W/sqft" ) ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "LoadUnit" ;
            sh:path :hasLoadUnit ;
            sh:pattern "[^<>[]|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unit of airflow" ;
            sh:in ( "CMM" "CFM" ) ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "AirflowUnit" ;
            sh:path :hasAirflowUnit ;
            sh:pattern "[^<>[]|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Actual exhaust airflow" ;
            sh:maxCount 1 ;
            sh:name "ActualExhaustAirflow" ;
            sh:path :hasActualExhaustAirflow ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Maximum cooling capacity" ;
            sh:maxCount 1 ;
            sh:name "MaximumCoolingCapacity" ;
            sh:path :hasMaximumCoolingCapacity ] .

:HvacTank a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FlowCapacity" ;
            sh:path :hasFlowCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Pumping media" ;
            sh:maxCount 1 ;
            sh:maxLength 100 ;
            sh:minLength 1 ;
            sh:name "PumpingMedia" ;
            sh:path :hasPumpingMedia ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "HvacTankId" ;
            sh:path :hasHvacTankId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Head capacity" ;
            sh:maxCount 1 ;
            sh:name "HeadCapacity" ;
            sh:path :hasHeadCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Pressure capacity of hvac pump" ;
            sh:maxCount 1 ;
            sh:name "PressureCapacity" ;
            sh:path :hasPressureCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Hvac tank type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "HvacTankType" ;
            sh:path :hasHvacTankType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:HvacValve a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FlowCapacity" ;
            sh:path :hasFlowCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Pressure capacity of hvac valve" ;
            sh:maxCount 1 ;
            sh:name "PressureCapacity" ;
            sh:path :hasPressureCapacity ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Pipe diameter of hvac valve" ;
            sh:maxCount 1 ;
            sh:name "PipeDiameter" ;
            sh:path :hasPipeDiameter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "HvacValveId" ;
            sh:path :hasHvacValveId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:IctHardware a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Mounted in it rack" ;
            sh:maxCount 1 ;
            sh:name "MountedInRack" ;
            sh:path :hasMountedInRack ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "It rack position" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "RackPosition" ;
            sh:path :hasRackPosition ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "IctHardwareId" ;
            sh:path :hasIctHardwareId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:InformationAndCommunicationSystem a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Type of cable" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "CableType" ;
            sh:path :hasCableType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Cable type of fibre" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FibreType" ;
            sh:path :hasFibreType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Determine the parameters within which a cable can be safely used" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "CableRating" ;
            sh:path :hasCableRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "InformationAndCommunicationSystemId" ;
            sh:path :hasInformationAndCommunicationSystemId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Cable signal type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SignalType" ;
            sh:path :hasSignalType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SystemId" ;
            sh:node :SystemId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Category of cable" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "CableCategory" ;
            sh:path :hasCableCategory ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:ItRack a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Mounting details" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "Mounting" ;
            sh:path :hasMounting ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "It rack type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ItRackType" ;
            sh:path :hasItRackType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ItRackId" ;
            sh:path :hasItRackId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Height of RUs (rack units)" ;
            sh:maxCount 1 ;
            sh:name "HeightRUs" ;
            sh:path :hasHeightRUs ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ] .

:JockeyPump a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Pumping media" ;
            sh:maxCount 1 ;
            sh:maxLength 100 ;
            sh:minLength 1 ;
            sh:name "PumpingMedia" ;
            sh:path :hasPumpingMedia ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Pressure capacity of jockey pump" ;
            sh:maxCount 1 ;
            sh:name "PressureCapacity" ;
            sh:path :hasPressureCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Head capacity" ;
            sh:maxCount 1 ;
            sh:name "HeadCapacity" ;
            sh:path :hasHeadCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FlowCapacity" ;
            sh:path :hasFlowCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "JockeyPumpId" ;
            sh:path :hasJockeyPumpId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Jockey pump type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "JockeyPumpType" ;
            sh:path :hasJockeyPumpType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubSubComponentTypeId" ;
            sh:node :SubSubComponentTypeId ;
            sh:path base:hasForeignKey ] .

:Land a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Reference to the Servitude which belongs to the land" ;
            sh:maxCount 1 ;
            sh:name "ServitudeId" ;
            sh:node :ServitudeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Reference to the site which the land belongs to" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SiteId" ;
            sh:node :SiteId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "The records can be used from this date onwards in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ValidFrom" ;
            sh:path :hasValidFrom ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of Land e.g: park, garden, parking" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "Name" ;
            sh:path :hasName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "District/Zoning number registered for the Plot of land" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "LandParcelNr" ;
            sh:path :hasLandParcelNr ;
            sh:pattern "[^<>[]{}|()°\"&=+§^~:;,$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "The records can be used until this date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ValidUntil" ;
            sh:path :hasValidUntil ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Development level of land" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "LandCoverage" ;
            sh:path :hasLandCoverage ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Geometry spatial reference of the component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "GeorefId" ;
            sh:path :hasGeorefId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Status of land" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "LandStatus" ;
            sh:path :hasLandStatus ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "LandId" ;
            sh:node :LandId ;
            sh:path base:hasPrimaryKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "User specific Land Code" ;
            sh:maxCount 1 ;
            sh:maxLength 70 ;
            sh:minLength 1 ;
            sh:name "LandCode" ;
            sh:path :hasLandCode ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Type of land" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "Type" ;
            sh:node :Type ;
            sh:path base:hasForeignKey ] .

:LightingSystem a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Volume domestic cold water" ;
            sh:maxCount 1 ;
            sh:name "IEEEIlluminationLevels" ;
            sh:path :hasIEEEIlluminationLevels ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Solar reflectance index (SRI) " ;
            sh:maxCount 1 ;
            sh:name "SolarReflectanceIndex" ;
            sh:path :hasSolarReflectanceIndex ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Light brightness" ;
            sh:maxCount 1 ;
            sh:name "LightBrightness" ;
            sh:path :hasLightBrightness ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Room cavity ratio" ;
            sh:maxCount 1 ;
            sh:name "RoomCavityRatio" ;
            sh:path :hasRoomCavityRatio ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Glare index" ;
            sh:maxCount 1 ;
            sh:name "GlareIndex" ;
            sh:path :hasGlareIndex ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Measurement unit for illumination " ;
            sh:in ( "lx" "fc" ) ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "IlluminationUnit" ;
            sh:path :hasIlluminationUnit ;
            sh:pattern "[^<>[]|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SystemId" ;
            sh:node :SystemId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "LightingSystemId" ;
            sh:path :hasLightingSystemId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:Luminaire a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "LuminaireId" ;
            sh:path :hasLuminaireId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Luminaire type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "LuminaireType" ;
            sh:path :hasLuminaireType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:ModbusController a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Detected (Y/N)" ;
            sh:maxCount 1 ;
            sh:name "Detected" ;
            sh:path :hasDetected ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Registration id" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ConnectorId" ;
            sh:path :hasConnectorId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "BacNetControllerId" ;
            sh:path :hasBacNetControllerId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Registration key" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "RegistrationKey" ;
            sh:path :hasRegistrationKey ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Registration id" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "RegistrationId" ;
            sh:path :hasRegistrationId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Enabled (Y/N)" ;
            sh:maxCount 1 ;
            sh:name "Enabled" ;
            sh:path :hasEnabled ] .

:MovingWalkway a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Step width" ;
            sh:maxCount 1 ;
            sh:name "StepWidth" ;
            sh:path :hasStepWidth ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Inclination" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Inclination" ;
            sh:path :hasInclination ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Speed of escalator" ;
            sh:maxCount 1 ;
            sh:name "MaxTravelSpeed" ;
            sh:path :hasMaxTravelSpeed ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Max travel distance" ;
            sh:maxCount 1 ;
            sh:name "MaxLength" ;
            sh:path :hasMaxLength ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Escalator type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MovingWalkwayType" ;
            sh:path :hasMovingWalkwayType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "MovingWalkwayId" ;
            sh:path :hasMovingWalkwayId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:OtherHvacFan a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanInstallationDate" ;
            sh:path :hasFanInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet initial cost" ;
            sh:maxCount 1 ;
            sh:name "DuctInletInitialCost" ;
            sh:path :hasDuctInletInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletMaintenanceInterval" ;
            sh:path :hasDuctInletMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet size" ;
            sh:maxCount 1 ;
            sh:name "DuctInletSize" ;
            sh:path :hasDuctInletSize ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletInstallationDate" ;
            sh:path :hasDuctInletInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan motor power" ;
            sh:maxCount 1 ;
            sh:name "FanMotorPower" ;
            sh:path :hasFanMotorPower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "FanExpectedReplacementCost" ;
            sh:path :hasFanExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletExpectedEndOfLife" ;
            sh:path :hasDuctInletExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet shape" ;
            sh:maxCount 1 ;
            sh:name "DuctInletShape" ;
            sh:path :hasDuctInletShape ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan min flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FanMinAirflowRating" ;
            sh:path :hasFanMinAirflowRating ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanModelNumber" ;
            sh:path :hasFanModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Max flow capacity" ;
            sh:maxCount 1 ;
            sh:name "MaxAirflowRating" ;
            sh:path :hasMaxAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanExpectedEndOfLife" ;
            sh:path :hasFanExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan fan drive type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanDriveType" ;
            sh:path :hasFanDriveType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanTurnoverDate" ;
            sh:path :hasFanTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Commission date if duct inlet in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletCommissionDate" ;
            sh:path :hasDuctInletCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet configuration" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletConfiguration" ;
            sh:path :hasDuctInletConfiguration ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Currency " ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletCurrency" ;
            sh:path :hasDuctInletCurrency ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Nominal airflow" ;
            sh:maxCount 1 ;
            sh:name "NominalAirflow" ;
            sh:path :hasNominalAirflow ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Currency " ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Currency" ;
            sh:path :hasCurrency ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Ceiling fan type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "OtherHvacFanType" ;
            sh:path :hasOtherHvacFanType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of Duct inlet" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletName" ;
            sh:path :hasDuctInletName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Other hvac fan sub component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SubComponent" ;
            sh:path :hasSubComponent ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "DuctInletExpectedReplacementCost" ;
            sh:path :hasDuctInletExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "OtherHvacFanId" ;
            sh:path :hasOtherHvacFanId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan max flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FanMaxAirflowRating" ;
            sh:path :hasFanMaxAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletSerialNumber" ;
            sh:path :hasDuctInletSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanMaintenanceInterval" ;
            sh:path :hasFanMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Motor power" ;
            sh:maxCount 1 ;
            sh:name "MotorPower" ;
            sh:path :hasMotorPower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet model number" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletModel" ;
            sh:path :hasDuctInletModel ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Min flow capacity" ;
            sh:maxCount 1 ;
            sh:name "MinAirflowRating" ;
            sh:path :hasMinAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan initial cost" ;
            sh:maxCount 1 ;
            sh:name "FanInitialCost" ;
            sh:path :hasFanInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanSerialNumber" ;
            sh:path :hasFanSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Fan life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "FanDurationLifeYear" ;
            sh:path :hasFanDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanTagNumber" ;
            sh:path :hasFanTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan nominal airflow" ;
            sh:maxCount 1 ;
            sh:name "FanNominalAirflow" ;
            sh:path :hasFanNominalAirflow ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanCommissionDate" ;
            sh:path :hasFanCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletTagNumber" ;
            sh:path :hasDuctInletTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Other hvac fan drive type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DriveType" ;
            sh:path :hasDriveType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Max rotation speed in rotations per minute" ;
            sh:maxCount 1 ;
            sh:name "MaxRotationSpeed" ;
            sh:path :hasMaxRotationSpeed ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletTurnoverDate" ;
            sh:path :hasDuctInletTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "FanName" ;
            sh:path :hasFanName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:PlumbingExpansionTank a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Plumbing tank sub component type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PlumbingExpansionTankType" ;
            sh:path :hasPlumbingExpansionTankType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "PlumbingExpansionTankId" ;
            sh:path :hasPlumbingExpansionTankId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "System pressure" ;
            sh:maxCount 1 ;
            sh:name "SystemPressure" ;
            sh:path :hasSystemPressure ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Tank capacity" ;
            sh:maxCount 1 ;
            sh:name "TankCapacity" ;
            sh:path :hasTankCapacity ] .

:PlumbingPump a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FlowCapacity" ;
            sh:path :hasFlowCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Pressure capacity of hvac valve" ;
            sh:maxCount 1 ;
            sh:name "PressureCapacity" ;
            sh:path :hasPressureCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Plumbing media type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PlumbingPumpType" ;
            sh:path :hasPlumbingPumpType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "PlumbingPumpId" ;
            sh:path :hasPlumbingPumpId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Head capacity" ;
            sh:maxCount 1 ;
            sh:name "HeadCapacity" ;
            sh:path :hasHeadCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "PumpingMedia" ;
            sh:maxCount 1 ;
            sh:name "PumpingMedia" ;
            sh:path :hasPumpingMedia ] .

:PlumbingPumpSubComponent a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Head capacity" ;
            sh:maxCount 1 ;
            sh:name "HeadCapacity" ;
            sh:path :hasHeadCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Pumping media" ;
            sh:maxCount 1 ;
            sh:name "PumpingMedia" ;
            sh:path :hasPumpingMedia ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Plumbing media type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PlumbingPumpSubComponentType" ;
            sh:path :hasPlumbingPumpSubComponentType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FlowCapacity" ;
            sh:path :hasFlowCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Pressure capacity of hvac valve" ;
            sh:maxCount 1 ;
            sh:name "PressureCapacity" ;
            sh:path :hasPressureCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "DomesticWaterPumpId" ;
            sh:path :hasDomesticWaterPumpId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Plumbing pump sub component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SubComponent" ;
            sh:path :hasSubComponent ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ] .

:PlumbingShutOffValve a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Pipe diameter of plumbing valve sub component" ;
            sh:maxCount 1 ;
            sh:name "PipeDiameter" ;
            sh:path :hasPipeDiameter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "PlumbingShutOffValveId" ;
            sh:path :hasPlumbingShutOffValveId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Plumbing shut off valve type (only applies for sub component plumbing shut off valve)" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PlumbingShutOffValveType" ;
            sh:path :hasPlumbingShutOffValveType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FlowCapacity" ;
            sh:path :hasFlowCapacity ] .

:PlumbingStorageTank a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Arrangement of plumbing storage tank (only applies for sub component plumbing storage tank)" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "Arrangement" ;
            sh:path :hasArrangement ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "System pressure" ;
            sh:maxCount 1 ;
            sh:name "SystemPressure" ;
            sh:path :hasSystemPressure ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Plumbing tank sub component type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "PlumbingStorageTankType" ;
            sh:path :hasPlumbingStorageTankType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "PlumbingStorageTankId" ;
            sh:path :hasPlumbingStorageTankId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Tank capacity" ;
            sh:maxCount 1 ;
            sh:name "TankCapacity" ;
            sh:path :hasTankCapacity ] .

:PlumbingSystem a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "PlumbingSystemId" ;
            sh:path :hasPlumbingSystemId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Volume domestic hot water" ;
            sh:maxCount 1 ;
            sh:name "VolumeDomesticHotWater" ;
            sh:path :hasVolumeDomesticHotWater ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Volume domestic hot water" ;
            sh:maxCount 1 ;
            sh:name "VolumeSanitaryWater" ;
            sh:path :hasVolumeSanitaryWater ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Volume waste water" ;
            sh:maxCount 1 ;
            sh:name "VolumeWasteWater" ;
            sh:path :hasVolumeWasteWater ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Plumbing volume" ;
            sh:maxCount 1 ;
            sh:name "PlumbingVolume" ;
            sh:path :hasPlumbingVolume ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Volume domestic cold water" ;
            sh:maxCount 1 ;
            sh:name "VolumeDomesticColdWater" ;
            sh:path :hasVolumeDomesticColdWater ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Volume storm water" ;
            sh:maxCount 1 ;
            sh:name "VolumeStormWater" ;
            sh:path :hasVolumeStormWater ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Volume fire department water" ;
            sh:maxCount 1 ;
            sh:name "VolumeFireDepartmentWater" ;
            sh:path :hasVolumeFireDepartmentWater ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SystemId" ;
            sh:node :SystemId ;
            sh:path base:hasForeignKey ] .

:PlumbingTank a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "PlumbingTankId" ;
            sh:path :hasPlumbingTankId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "System pressure" ;
            sh:maxCount 1 ;
            sh:name "SystemPressure" ;
            sh:path :hasSystemPressure ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Tank capacity" ;
            sh:maxCount 1 ;
            sh:name "TankCapacity" ;
            sh:path :hasTankCapacity ] .

:PlumbingValve a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Pipe diameter" ;
            sh:maxCount 1 ;
            sh:name "PipeDiameter" ;
            sh:path :hasPipeDiameter ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FlowCapacity" ;
            sh:path :hasFlowCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "PlumbingValveId" ;
            sh:path :hasPlumbingValveId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:PlumbingValveSubComponent a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Plumbing pump sub component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SubComponent" ;
            sh:path :hasSubComponent ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FlowCapacity" ;
            sh:path :hasFlowCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Pipe diameter of plumbing valve sub component" ;
            sh:maxCount 1 ;
            sh:name "PipeDiameter" ;
            sh:path :hasPipeDiameter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "PlumbingValveSubComponentId" ;
            sh:path :hasPlumbingValveSubComponentId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:SensorEquipment a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "SensorEquipmentId" ;
            sh:path :hasSensorEquipmentId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Battery percentage" ;
            sh:maxCount 1 ;
            sh:name "BatteryPercentage" ;
            sh:path :hasBatteryPercentage ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Sensor type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SensorEquipmentType" ;
            sh:path :hasSensorEquipmentType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Wifi signal strength" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "WifiSignalStrength" ;
            sh:path :hasWifiSignalStrength ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:Server a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "It rack position" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "RackPosition" ;
            sh:path :hasRackPosition ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ServerId" ;
            sh:path :hasServerId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Mounted in it rack" ;
            sh:maxCount 1 ;
            sh:name "MountedInRack" ;
            sh:path :hasMountedInRack ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Number of ports" ;
            sh:maxCount 1 ;
            sh:name "NumberOfPorts" ;
            sh:path :hasNumberOfPorts ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Height of RUs (rack units)" ;
            sh:maxCount 1 ;
            sh:name "HeightRUs" ;
            sh:path :hasHeightRUs ] .

:Servitudes a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Type of servitude " ;
            sh:in ( "Easements" "Covenants" "Profits" ) ;
            sh:maxCount 1 ;
            sh:maxLength 75 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ServitudesType" ;
            sh:path :hasServitudesType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Link to document" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DocumentId" ;
            sh:path :hasDocumentId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ServitudeId" ;
            sh:node :ServitudeId ;
            sh:path base:hasPrimaryKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Date servitude starts in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ValidFrom" ;
            sh:path :hasValidFrom ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of servitude" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "Name" ;
            sh:path :hasName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Date servitude ends in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ValidUntil" ;
            sh:path :hasValidUntil ] .

:Site a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SiteId" ;
            sh:node :SiteId ;
            sh:path base:hasPrimaryKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Status of site" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SiteStatus" ;
            sh:path :hasSiteStatus ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "The records can be used from this date onwards in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ValidFrom" ;
            sh:path :hasValidFrom ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of Site" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "Name" ;
            sh:path :hasName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "User specific Site Code" ;
            sh:maxCount 1 ;
            sh:maxLength 70 ;
            sh:minLength 1 ;
            sh:name "SiteCode" ;
            sh:path :hasSiteCode ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Type of site" ;
            sh:in ( "Education" "Health Care" "Hotel" "Industrial" "Lodging, Leisure & Recreation" "Mixed Use" "Office" "Residential" "Retail" "Technology/Science" "Other" ) ;
            sh:maxCount 1 ;
            sh:maxLength 75 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "SiteType" ;
            sh:path :hasSiteType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "The records can be used until this date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ValidUntil" ;
            sh:path :hasValidUntil ] .

:Space a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Usable Height of space" ;
            sh:maxCount 1 ;
            sh:name "SpaceHeightUsable" ;
            sh:path :hasSpaceHeightUsable ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Actual space height e.g: 3.6 m" ;
            sh:maxCount 1 ;
            sh:name "SpaceHeight" ;
            sh:path :hasSpaceHeight ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Define if space is climate cooled (Y/N)" ;
            sh:maxCount 1 ;
            sh:name "ClimateCooled" ;
            sh:path :hasClimateCooled ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Define the ventilation type e.g: exhaust, supply, balanced, and heat-recovery" ;
            sh:in ( "Exhaust" "Supply" "Balanced" "Heat-recovery" ) ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "VentilationType" ;
            sh:path :hasVentilationType ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Is the space used by multiple tenants (Y/N)" ;
            sh:maxCount 1 ;
            sh:name "CoUseArea" ;
            sh:path :hasCoUseArea ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Material of floor" ;
            sh:maxCount 1 ;
            sh:maxLength 75 ;
            sh:minLength 1 ;
            sh:name "PrimaryFloorMaterial" ;
            sh:path :hasPrimaryFloorMaterial ;
            sh:pattern "[^<>[]{}|/°\"&=+§^~:;,$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Define maximum occupancy of space" ;
            sh:maxCount 1 ;
            sh:name "MaximumOccupancy" ;
            sh:path :hasMaximumOccupancy ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Area that is cooled" ;
            sh:maxCount 1 ;
            sh:name "EffectZonesCooling" ;
            sh:path :hasEffectZonesCooling ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Material of ceiling e.g: cement" ;
            sh:maxCount 1 ;
            sh:maxLength 75 ;
            sh:minLength 1 ;
            sh:name "PrimaryCeilingMaterial" ;
            sh:path :hasPrimaryCeilingMaterial ;
            sh:pattern "[^<>[]{}|/°\"&=+§^~:;,$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Area that is ventilated" ;
            sh:maxCount 1 ;
            sh:name "EffectZonesVentilation" ;
            sh:path :hasEffectZonesVentilation ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "User specific Space Code" ;
            sh:maxCount 1 ;
            sh:maxLength 70 ;
            sh:minLength 1 ;
            sh:name "SpaceCode" ;
            sh:path :hasSpaceCode ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Define if space is climate heated (Y/N)" ;
            sh:maxCount 1 ;
            sh:name "ClimateHeated" ;
            sh:path :hasClimateHeated ],
        [ a sh:PropertyShape ;
            sh:description "Reference to the floor which the space belongs to" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "FloorId" ;
            sh:node :FloorId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of space" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "Name" ;
            sh:path :hasName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Type of space" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "SpaceType" ;
            sh:path :hasSpaceType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Area that is heated" ;
            sh:maxCount 1 ;
            sh:name "EffectZonesHeating" ;
            sh:path :hasEffectZonesHeating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Gross volume of space including surrounding walls" ;
            sh:maxCount 1 ;
            sh:name "SpaceVolumeGross" ;
            sh:path :hasSpaceVolumeGross ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "The records can be used until this date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ValidUntil" ;
            sh:path :hasValidUntil ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SpaceId" ;
            sh:node :SpaceId ;
            sh:path base:hasPrimaryKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Gross volume of space excluding surrounding  walls" ;
            sh:maxCount 1 ;
            sh:name "SpaceVolumeNet" ;
            sh:path :hasSpaceVolumeNet ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Number of space" ;
            sh:maxCount 1 ;
            sh:name "SpaceNumber" ;
            sh:path :hasSpaceNumber ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "The records can be used from this date onwards in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ValidFrom" ;
            sh:path :hasValidFrom ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Material of wall" ;
            sh:maxCount 1 ;
            sh:maxLength 75 ;
            sh:minLength 1 ;
            sh:name "PrimaryWallMaterial" ;
            sh:path :hasPrimaryWallMaterial ;
            sh:pattern "[^<>[]{}|/°\"&=+§^~:;,$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Status of the space is eligible for renting out (Y/N)" ;
            sh:maxCount 1 ;
            sh:name "Rentability" ;
            sh:path :hasRentability ] .

:SprinklerHeatTracing a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubSubComponentTypeId" ;
            sh:node :SubSubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Sprinkler heat tracing type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SprinklerHeatTracingType" ;
            sh:path :hasSprinklerHeatTracingType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "SprinklerHeatTracingId" ;
            sh:path :hasSprinklerHeatTracingId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Amount of power density" ;
            sh:maxCount 1 ;
            sh:name "PowerDensity" ;
            sh:path :hasPowerDensity ] .

:SprinklerTank a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "SprinklerTankId" ;
            sh:path :hasSprinklerTankId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "System pressure" ;
            sh:maxCount 1 ;
            sh:name "SystemPressure" ;
            sh:path :hasSystemPressure ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubSubComponentTypeId" ;
            sh:node :SubSubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Tank capacity" ;
            sh:maxCount 1 ;
            sh:name "TankCapacity" ;
            sh:path :hasTankCapacity ] .

:SprinklerValve a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Sprinkler valve sub sub component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SubSubComponent" ;
            sh:path :hasSubSubComponent ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FlowCapacity" ;
            sh:path :hasFlowCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Pressure capacity of jockey pump" ;
            sh:maxCount 1 ;
            sh:name "PressureCapacity" ;
            sh:path :hasPressureCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "SprinklerValveId" ;
            sh:path :hasSprinklerValveId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubSubComponentTypeId" ;
            sh:node :SubSubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Pipe diameter of hvac valve" ;
            sh:maxCount 1 ;
            sh:name "PipeDiameter" ;
            sh:path :hasPipeDiameter ] .

:SubComponentType a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Type of component type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "SubComponentTypeType" ;
            sh:path :hasSubComponentTypeType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of product" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "Name" ;
            sh:path :hasName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "European identification number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "CeIdentification" ;
            sh:path :hasCeIdentification ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Relevance of maintenance" ;
            sh:in ( "High" "Medium" "Low" ) ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MaintenanceRelevance" ;
            sh:path :hasMaintenanceRelevance ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Class component belongs to" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "Class" ;
            sh:path :hasClass ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Maintenance group" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MaintenanceGroup" ;
            sh:path :hasMaintenanceGroup ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "SubComponentTypeId" ;
            sh:path :hasSubComponentTypeId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Description of component type" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "Description" ;
            sh:path :hasDescription ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MaintenanceInterval" ;
            sh:path :hasMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of component type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ModelNumber" ;
            sh:path :hasModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Warranty duration in months" ;
            sh:maxCount 1 ;
            sh:name "WarrantyDuration" ;
            sh:path :hasWarrantyDuration ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Product website" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "UrlLibrary" ;
            sh:path :hasUrlLibrary ;
            sh:pattern "[^<>[]{}|()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Link to document" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DocumentId" ;
            sh:path :hasDocumentId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Life span of product in years" ;
            sh:maxCount 1 ;
            sh:name "ExpectedLifeYear" ;
            sh:path :hasExpectedLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Component type name and/or number" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "Model" ;
            sh:path :hasModel ] .

:SubSubComponentType a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Life span of product in years" ;
            sh:maxCount 1 ;
            sh:name "ExpectedLifeYear" ;
            sh:path :hasExpectedLifeYear ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Type of component type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "SubSubComponentTypeType" ;
            sh:path :hasSubSubComponentTypeType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Link to document" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DocumentId" ;
            sh:path :hasDocumentId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Maintenance group" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MaintenanceGroup" ;
            sh:path :hasMaintenanceGroup ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of component type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ModelNumber" ;
            sh:path :hasModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of product" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "Name" ;
            sh:path :hasName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Relevance of maintenance" ;
            sh:in ( "High" "Medium" "Low" ) ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MaintenanceRelevance" ;
            sh:path :hasMaintenanceRelevance ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "SubSubComponentTypeId" ;
            sh:path :hasSubSubComponentTypeId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Component type name and/or number" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "Model" ;
            sh:path :hasModel ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Class component belongs to" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "Class" ;
            sh:path :hasClass ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Warranty duration in months" ;
            sh:maxCount 1 ;
            sh:name "WarrantyDuration" ;
            sh:path :hasWarrantyDuration ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Product website" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "UrlLibrary" ;
            sh:path :hasUrlLibrary ;
            sh:pattern "[^<>[]{}|()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MaintenanceInterval" ;
            sh:path :hasMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Description of component type" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "Description" ;
            sh:path :hasDescription ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "European identification number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "CeIdentification" ;
            sh:path :hasCeIdentification ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:System a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Type of system" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "SystemType" ;
            sh:path :hasSystemType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Reference system id coming from another system" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SystemReferenceId" ;
            sh:path :hasSystemReferenceId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "SystemId" ;
            sh:path :hasSystemId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of system" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "Name" ;
            sh:path :hasName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Warranty start date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "WarrantyStartDate" ;
            sh:path :hasWarrantyStartDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "System model name and/or number" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "Model" ;
            sh:path :hasModel ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Class system belongs to" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "Class" ;
            sh:path :hasClass ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Counter of system" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "Counter" ;
            sh:path :hasCounter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of system" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SerialNumber" ;
            sh:path :hasSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Description of system" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "Description" ;
            sh:path :hasDescription ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:SystemBuilding a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SystemId" ;
            sh:node :SystemId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "BuildingId" ;
            sh:node :BuildingId ;
            sh:path base:hasForeignKey ] .

:SystemFloor a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SystemId" ;
            sh:node :SystemId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "FloorId" ;
            sh:node :FloorId ;
            sh:path base:hasForeignKey ] .

:SystemRentalUnit a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SystemId" ;
            sh:node :SystemId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "RentalUnitId" ;
            sh:node :RentalUnitId ;
            sh:path base:hasForeignKey ] .

:SystemSite a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SystemId" ;
            sh:node :SystemId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SiteId" ;
            sh:node :SiteId ;
            sh:path base:hasForeignKey ] .

:SystemSpace a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SpaceId" ;
            sh:node :SpaceId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SystemId" ;
            sh:node :SystemId ;
            sh:path base:hasForeignKey ] .

:SystemUnit a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "UnitId" ;
            sh:node :UnitId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SystemId" ;
            sh:node :SystemId ;
            sh:path base:hasForeignKey ] .

:TankWaterHeater a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "First hour delivery" ;
            sh:maxCount 1 ;
            sh:name "FirstHourDelivery" ;
            sh:path :hasFirstHourDelivery ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "TankWaterHeaterId" ;
            sh:path :hasTankWaterHeaterId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Tank capacity" ;
            sh:maxCount 1 ;
            sh:name "TankCapacity" ;
            sh:path :hasTankCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Recovery rate to 100 frise in l per hour" ;
            sh:maxCount 1 ;
            sh:name "Recovery100FRise" ;
            sh:path :hasRecovery100FRise ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ] .

:TankWaterHeaterSubComponent a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "TankWaterHeaterSubComponentId" ;
            sh:path :hasTankWaterHeaterSubComponentId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Tank capacity" ;
            sh:maxCount 1 ;
            sh:name "TankCapacity" ;
            sh:path :hasTankCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "First hour delivery" ;
            sh:maxCount 1 ;
            sh:name "FirstHourDelivery" ;
            sh:path :hasFirstHourDelivery ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Power input" ;
            sh:maxCount 1 ;
            sh:name "PowerInput" ;
            sh:path :hasPowerInput ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Recovery rate to 100 frise in l per hour" ;
            sh:maxCount 1 ;
            sh:name "Recovery100FRise" ;
            sh:path :hasRecovery100FRise ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Tank water heater sub component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SubComponent" ;
            sh:path :hasSubComponent ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubSubComponentTypeId" ;
            sh:node :SubSubComponentTypeId ;
            sh:path base:hasForeignKey ] .

:TanklessWaterHeater a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "TanklessWaterHeaterId" ;
            sh:path :hasTanklessWaterHeaterId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "First hour delivery" ;
            sh:maxCount 1 ;
            sh:name "FirstHourDelivery" ;
            sh:path :hasFirstHourDelivery ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Recovery rate to 100 frise in l per hour" ;
            sh:maxCount 1 ;
            sh:name "Recovery100FRise" ;
            sh:path :hasRecovery100FRise ] .

:TanklessWaterHeaterSubComponent a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Tankless water heater sub component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SubComponent" ;
            sh:path :hasSubComponent ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Recovery rate to 100 frise in l per hour" ;
            sh:maxCount 1 ;
            sh:name "Recovery100FRise" ;
            sh:path :hasRecovery100FRise ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "TanklessWaterHeaterSubComponentId" ;
            sh:path :hasTanklessWaterHeaterSubComponentId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "First hour delivery" ;
            sh:maxCount 1 ;
            sh:name "FirstHourDelivery" ;
            sh:path :hasFirstHourDelivery ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubSubComponentTypeId" ;
            sh:node :SubSubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Power input" ;
            sh:maxCount 1 ;
            sh:name "PowerInput" ;
            sh:path :hasPowerInput ] .

:TerminalUnit a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletExpectedEndOfLife" ;
            sh:path :hasDuctInletExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet model number" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletModel" ;
            sh:path :hasDuctInletModel ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Currency " ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletCurrency" ;
            sh:path :hasDuctInletCurrency ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletTurnoverDate" ;
            sh:path :hasDuctInletTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Commission date if duct inlet in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletCommissionDate" ;
            sh:path :hasDuctInletCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "DuctInletInstallationDate" ;
            sh:path :hasDuctInletInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletTagNumber" ;
            sh:path :hasDuctInletTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet size" ;
            sh:maxCount 1 ;
            sh:name "DuctInletSize" ;
            sh:path :hasDuctInletSize ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet configuration" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletConfiguration" ;
            sh:path :hasDuctInletConfiguration ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "DuctInletExpectedReplacementCost" ;
            sh:path :hasDuctInletExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Max flow capacity" ;
            sh:maxCount 1 ;
            sh:name "MaxAirflowRating" ;
            sh:path :hasMaxAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of Duct inlet" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "DuctInletName" ;
            sh:path :hasDuctInletName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Min flow capacity" ;
            sh:maxCount 1 ;
            sh:name "MinAirflowRating" ;
            sh:path :hasMinAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet shape" ;
            sh:maxCount 1 ;
            sh:name "DuctInletShape" ;
            sh:path :hasDuctInletShape ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "DamperId" ;
            sh:path :hasDamperId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletSerialNumber" ;
            sh:path :hasDuctInletSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Duct inlet maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "DuctInletMaintenanceInterval" ;
            sh:path :hasDuctInletMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Duct inlet initial cost" ;
            sh:maxCount 1 ;
            sh:name "DuctInletInitialCost" ;
            sh:path :hasDuctInletInitialCost ] .

:ThermalMeter a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Export energy" ;
            sh:maxCount 1 ;
            sh:name "EnergyRate" ;
            sh:path :hasEnergyRate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Energy total" ;
            sh:maxCount 1 ;
            sh:name "EnergyTotal" ;
            sh:path :hasEnergyTotal ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ThermalMeterId" ;
            sh:path :hasThermalMeterId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Supply temperature" ;
            sh:maxCount 1 ;
            sh:name "SupplyTemperature" ;
            sh:path :hasSupplyTemperature ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Return temperature" ;
            sh:maxCount 1 ;
            sh:name "ReturnTemperature" ;
            sh:path :hasReturnTemperature ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Volume" ;
            sh:maxCount 1 ;
            sh:name "VolumeTotal" ;
            sh:path :hasVolumeTotal ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Export energy" ;
            sh:maxCount 1 ;
            sh:name "DeltaTemperature" ;
            sh:path :hasDeltaTemperature ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Volume flow" ;
            sh:maxCount 1 ;
            sh:name "VolumeFlow" ;
            sh:path :hasVolumeFlow ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Substance that is measured" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Measures" ;
            sh:path :hasMeasures ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Water meter type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "ThermalMeterType" ;
            sh:path :hasThermalMeterType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:Toilet a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Water per flush" ;
            sh:maxCount 1 ;
            sh:name "WaterPerFlush" ;
            sh:path :hasWaterPerFlush ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ToiletId" ;
            sh:path :hasToiletId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "InstallationType" ;
            sh:path :hasInstallationType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:ToiletFlushometer a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "InstallationType" ;
            sh:path :hasInstallationType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Water per flush" ;
            sh:maxCount 1 ;
            sh:name "WaterPerFlush" ;
            sh:path :hasWaterPerFlush ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubSubComponentTypeId" ;
            sh:node :SubSubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ToiletFlushometerId" ;
            sh:path :hasToiletFlushometerId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:ToiletTank a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubSubComponentTypeId" ;
            sh:node :SubSubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "InstallationType" ;
            sh:path :hasInstallationType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Flushing type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FlushingType" ;
            sh:path :hasFlushingType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Water per flush" ;
            sh:maxCount 1 ;
            sh:name "WaterPerFlush" ;
            sh:path :hasWaterPerFlush ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "ToiletTankId" ;
            sh:path :hasToiletTankId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:TransferSwitch a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Mains rating" ;
            sh:maxCount 1 ;
            sh:name "MainsRating" ;
            sh:path :hasMainsRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Poles" ;
            sh:maxCount 1 ;
            sh:name "Poles" ;
            sh:path :hasPoles ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "TransferSwitchId" ;
            sh:path :hasTransferSwitchId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Material" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "MainBusMaterial" ;
            sh:path :hasMainBusMaterial ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Current rating" ;
            sh:maxCount 1 ;
            sh:name "MainBusCurrentRating" ;
            sh:path :hasMainBusCurrentRating ] .

:Transformer a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Voltage secondary" ;
            sh:maxCount 1 ;
            sh:name "VoltageSecondary" ;
            sh:path :hasVoltageSecondary ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Voltage primary" ;
            sh:maxCount 1 ;
            sh:name "VoltagePrimary" ;
            sh:path :hasVoltagePrimary ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Size kva (kilovolt-ampere)" ;
            sh:maxCount 1 ;
            sh:name "SizeKva" ;
            sh:path :hasSizeKva ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Transformer type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "TransformerType" ;
            sh:path :hasTransformerType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "TransformerId" ;
            sh:path :hasTransformerId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Phases" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Phases" ;
            sh:path :hasPhases ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:Unit a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "User-specific code for unit" ;
            sh:maxCount 1 ;
            sh:maxLength 70 ;
            sh:minLength 1 ;
            sh:name "UnitCode" ;
            sh:path :hasUnitCode ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "The records can be used from this date onwards in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ValidFrom" ;
            sh:path :hasValidFrom ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "UnitId" ;
            sh:node :UnitId ;
            sh:path base:hasPrimaryKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Type of Unit e.g: part of building, rental unit" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "UnitType" ;
            sh:path :hasUnitType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "The records can be used until this date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ValidUntil" ;
            sh:path :hasValidUntil ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of unit" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "Name" ;
            sh:path :hasName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:UnitBuilding a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "UnitId" ;
            sh:node :UnitId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "BuildingId" ;
            sh:node :BuildingId ;
            sh:path base:hasForeignKey ] .

:UnitFloor a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "UnitId" ;
            sh:node :UnitId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "FloorId" ;
            sh:node :FloorId ;
            sh:path base:hasForeignKey ] .

:UnitHeaterSubComponent a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Heating method commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "HeatingMethodCommissionDate" ;
            sh:path :hasHeatingMethodCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan max flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FanMaxAirflowRating" ;
            sh:path :hasFanMaxAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "FanExpectedReplacementCost" ;
            sh:path :hasFanExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanModelNumber" ;
            sh:path :hasFanModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan motor power" ;
            sh:maxCount 1 ;
            sh:name "FanMotorPower" ;
            sh:path :hasFanMotorPower ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Heating method maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "HeatingMethodMaintenanceInterval" ;
            sh:path :hasHeatingMethodMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "HeatingMethodInstallationDate" ;
            sh:path :hasHeatingMethodInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Name of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "FanName" ;
            sh:path :hasFanName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Flow capacity" ;
            sh:maxCount 1 ;
            sh:name "HotWaterUnitHeaterFlowCapacity" ;
            sh:path :hasHotWaterUnitHeaterFlowCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of fan" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanSerialNumber" ;
            sh:path :hasFanSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanTagNumber" ;
            sh:path :hasFanTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Heating method expected replacement costs" ;
            sh:maxCount 1 ;
            sh:name "HeatingMethodExpectedReplacementCost" ;
            sh:path :hasHeatingMethodExpectedReplacementCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanExpectedEndOfLife" ;
            sh:path :hasFanExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Fan life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "FanDurationLifeYear" ;
            sh:path :hasFanDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan min flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FanMinAirflowRating" ;
            sh:path :hasFanMinAirflowRating ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Heating method outside diameter" ;
            sh:maxCount 1 ;
            sh:name "HeatingMethodOutsideDiameter" ;
            sh:path :hasHeatingMethodOutsideDiameter ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanCommissionDate" ;
            sh:path :hasFanCommissionDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Condensate information if steam unit heater" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SteamUnitHeaterCondensate" ;
            sh:path :hasSteamUnitHeaterCondensate ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unit heater sub component type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "UnitHeaterSubComponentType" ;
            sh:path :hasUnitHeaterSubComponentType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Currency " ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Currency" ;
            sh:path :hasCurrency ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Serial number of heating method" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "HeatingMethodSerialNumber" ;
            sh:path :hasHeatingMethodSerialNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Model number of heating method" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "HeatingMethodModelNumber" ;
            sh:path :hasHeatingMethodModelNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan maintenance interval either as string: monthly, quarterly, etc. or as month" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanMaintenanceInterval" ;
            sh:path :hasFanMaintenanceInterval ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "UnitHeaterSubComponentId" ;
            sh:path :hasUnitHeaterSubComponentId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Heating method initial cost" ;
            sh:maxCount 1 ;
            sh:name "HeatingMethodInitialCost" ;
            sh:path :hasHeatingMethodInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Heating method expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "HeatingMethodExpectedEndOfLife" ;
            sh:path :hasHeatingMethodExpectedEndOfLife ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Heating method turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "HeatingMethodTurnoverDate" ;
            sh:path :hasHeatingMethodTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanInstallationDate" ;
            sh:path :hasFanInstallationDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:integer ;
            sh:description "Heating method life span of component in years" ;
            sh:maxCount 1 ;
            sh:name "HeatingMethodDurationLifeYear" ;
            sh:path :hasHeatingMethodDurationLifeYear ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)" ;
            sh:maxCount 1 ;
            sh:name "FanTurnoverDate" ;
            sh:path :hasFanTurnoverDate ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unit heater sub component" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "SubComponent" ;
            sh:path :hasSubComponent ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan initial cost" ;
            sh:maxCount 1 ;
            sh:name "FanInitialCost" ;
            sh:path :hasFanInitialCost ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Fan nominal airflow" ;
            sh:maxCount 1 ;
            sh:name "FanNominalAirflow" ;
            sh:path :hasFanNominalAirflow ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Heating method name of product" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "HeatingMethodName" ;
            sh:path :hasHeatingMethodName ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Fan fan drive type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FanDriveType" ;
            sh:path :hasFanDriveType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Heating method type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "HeatingMethodType" ;
            sh:path :hasHeatingMethodType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Heating method tag number" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "HeatingMethodTagNumber" ;
            sh:path :hasHeatingMethodTagNumber ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Nominal heating capacity" ;
            sh:maxCount 1 ;
            sh:name "NominalHeatingCapacity" ;
            sh:path :hasNominalHeatingCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Power input" ;
            sh:maxCount 1 ;
            sh:name "ElectricUnitHeaterPowerInput" ;
            sh:path :hasElectricUnitHeaterPowerInput ] .

:UnitLand a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "UnitId" ;
            sh:node :UnitId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "LandId" ;
            sh:node :LandId ;
            sh:path base:hasForeignKey ] .

:UnitSite a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "UnitId" ;
            sh:node :UnitId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SiteId" ;
            sh:node :SiteId ;
            sh:path base:hasForeignKey ] .

:UnitSpace a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "UnitId" ;
            sh:node :UnitId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SpaceId" ;
            sh:node :SpaceId ;
            sh:path base:hasForeignKey ] .

:Ups a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Power output" ;
            sh:maxCount 1 ;
            sh:name "PowerOutputKva" ;
            sh:path :hasPowerOutputKva ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Power output" ;
            sh:maxCount 1 ;
            sh:name "PowerOutput" ;
            sh:path :hasPowerOutput ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "UpsId" ;
            sh:path :hasUpsId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Input phases" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "InputPhases" ;
            sh:path :hasInputPhases ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Output phases" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "OutputPhases" ;
            sh:path :hasOutputPhases ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Input voltage" ;
            sh:maxCount 1 ;
            sh:name "InputVoltage" ;
            sh:path :hasInputVoltage ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Output voltage" ;
            sh:maxCount 1 ;
            sh:name "OutputVoltage" ;
            sh:path :hasOutputVoltage ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ] .

:UrinalFlushometer a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "UrinalFlushometerId" ;
            sh:path :hasUrinalFlushometerId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Installation type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "InstallationType" ;
            sh:path :hasInstallationType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Water per flush" ;
            sh:maxCount 1 ;
            sh:name "WaterPerFlush" ;
            sh:path :hasWaterPerFlush ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubSubComponentTypeId" ;
            sh:node :SubSubComponentTypeId ;
            sh:path base:hasForeignKey ] .

:VariableFrequencyDrive a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "VariableFrequencyDriveId" ;
            sh:path :hasVariableFrequencyDriveId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Variable frequency type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "VariableFrequencyDriveType" ;
            sh:path :hasVariableFrequencyDriveType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:WaterFiltration a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Water filtration type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "WaterFiltrationType" ;
            sh:path :hasWaterFiltrationType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Tank capacity" ;
            sh:maxCount 1 ;
            sh:name "TankCapacity" ;
            sh:path :hasTankCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Flow capacity" ;
            sh:maxCount 1 ;
            sh:name "FlowCapacity" ;
            sh:path :hasFlowCapacity ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "WaterFilterationId" ;
            sh:path :hasWaterFilterationId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Water filtration rating" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "FilterationRating" ;
            sh:path :hasFilterationRating ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:WaterHeater a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "WaterHeaterId" ;
            sh:path :hasWaterHeaterId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "ComponentTypeId" ;
            sh:node :ComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "First hour delivery" ;
            sh:maxCount 1 ;
            sh:name "FirstHourDelivery" ;
            sh:path :hasFirstHourDelivery ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Recovery rate to 100 frise in l per hour" ;
            sh:maxCount 1 ;
            sh:name "Recovery100FRise" ;
            sh:path :hasRecovery100FRise ] .

:WaterMeter a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Volume in liter" ;
            sh:maxCount 1 ;
            sh:name "Volume" ;
            sh:path :hasVolume ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "WaterMeterId" ;
            sh:path :hasWaterMeterId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Water meter type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "WaterMeterType" ;
            sh:path :hasWaterMeterType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Volume flow" ;
            sh:maxCount 1 ;
            sh:name "VolumeFlow" ;
            sh:path :hasVolumeFlow ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:decimal ;
            sh:description "Supply temperature" ;
            sh:maxCount 1 ;
            sh:name "SupplyTemperature" ;
            sh:path :hasSupplyTemperature ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Substance that is measured" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "Measures" ;
            sh:path :hasMeasures ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:WirelessAccessPoint a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minCount 1 ;
            sh:minLength 1 ;
            sh:name "WirelessAccessPointId" ;
            sh:path :hasWirelessAccessPointId ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:boolean ;
            sh:description "Mounted in it rack" ;
            sh:maxCount 1 ;
            sh:name "MountedInRack" ;
            sh:path :hasMountedInRack ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Mounting details" ;
            sh:maxCount 1 ;
            sh:maxLength 200 ;
            sh:minLength 1 ;
            sh:name "Mounting" ;
            sh:path :hasMounting ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:description "Unique identifier either coming from previous system otherwise it needs to be defined" ;
            sh:maxCount 1 ;
            sh:minCount 1 ;
            sh:name "SubComponentTypeId" ;
            sh:node :SubComponentTypeId ;
            sh:path base:hasForeignKey ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "It rack position" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "RackPosition" ;
            sh:path :hasRackPosition ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ],
        [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:description "Wireless access point type" ;
            sh:maxCount 1 ;
            sh:maxLength 50 ;
            sh:minLength 1 ;
            sh:name "WirelessAccessPointType" ;
            sh:path :hasWirelessAccessPointType ;
            sh:pattern "[^<>[]{}|/()°\"&=+§^~:;$%!?0-cZ]+$" ] .

:ServitudeId a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:name "ServitudeId" ;
            sh:path :hasServitudeId ] .

:LandId a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:name "LandId" ;
            sh:path :hasLandId ] .

:CertificateId a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:name "CertificateId" ;
            sh:path :hasCertificateId ] .

:SpaceId a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:name "SpaceId" ;
            sh:path :hasSpaceId ] .

:FloorId a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:name "FloorId" ;
            sh:path :hasFloorId ] .

:BuildingId a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:name "BuildingId" ;
            sh:path :hasBuildingId ] .

:SiteId a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:name "SiteId" ;
            sh:path :hasSiteId ] .

:AreaMeasurementId a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:name "AreaMeasurementId" ;
            sh:path :hasAreaMeasurementId ] .

:UnitId a sh:NodeShape ;
    sh:property [ a sh:PropertyShape ;
            sh:datatype xsd:string ;
            sh:maxCount 1 ;
            sh:name "UnitId" ;
            sh:path :hasUnitId ] .

